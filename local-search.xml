<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>mysql学习笔记</title>
    <link href="/2023/05/08/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/05/08/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Mysql基础学习笔记"><a href="#Mysql基础学习笔记" class="headerlink" title="Mysql基础学习笔记"></a>Mysql基础学习笔记</h1><h2 id="mysql概述"><a href="#mysql概述" class="headerlink" title="mysql概述"></a>mysql概述</h2><p>MySQL 是由瑞典的 MySQL AB 公司开发的，目前是 Oracle（甲骨文）公司的一个关系型数据库产品（2008年 MySQL AB 被 Sun 公司收购、2009年 Sun 公司又被 Oracle 收购 ）。MySQL 是世界上最流行的开源数据库系统，功能足够强大，足以应付普通的web应用。百度，淘宝，校内网，腾讯，维基百科等都在使用MySQL数据库。</p><p>MySQL的版本分为社区版（免费）和企业版，支持多个操作系统平台，内部支持多种存储引擎，<strong>可以根据具体需求给每个表设置不同的存储引擎以达到最高的效率</strong>。</p><h3 id="mysql优点"><a href="#mysql优点" class="headerlink" title="mysql优点"></a>mysql优点</h3><ul><li>成本低，开源，一般可免费使用。</li><li>性能高，执行很快。</li><li>简单，易于安装和使用。</li></ul><h3 id="数据库的好处"><a href="#数据库的好处" class="headerlink" title="数据库的好处"></a>数据库的好处</h3><ul><li>实现数据持久化存储</li><li>使用完整的管理系统统一管理，易于查询</li></ul><h3 id="数据的相关概念"><a href="#数据的相关概念" class="headerlink" title="数据的相关概念"></a>数据的相关概念</h3><p>DB<br>数据库（database） 存储数据的仓库，保存了一系列有组织的数据<br>DBMS<br>数据库管理系统（Database Management System）用于管理DB中的数据，数据库是通过DBMS创建和操作的容器。<br>常见的数据库管理系统：MySQL、Oracle、 DB2、 SQL server<br>SQL<br>结构化查询语言（Structure Query Language）：专门用来与数据库通信的语言<br>特点：</p><p>①不是某个特定数据库供应商专有的语言，几乎所有DBMS都支持SQL。</p><p>②简单易学。</p><p>③灵活使用可以进行非常复杂和高级的数据库操作。</p><h3 id="数据库是什么"><a href="#数据库是什么" class="headerlink" title="数据库是什么"></a>数据库是什么</h3><p>严格来讲数据库是一个存放数据的容器（仓库），可以是文件或是内存空间等。当我们需要访问数据库中数据时，我们需要使用到数据库管理系统（DBMS）。我们平时说的数据库是指：数据库管理系统（DBMS）+数据库（DB）</p><p><strong>数据库概念的正规定义</strong>：对大量数据进行管理的高效的解决方案。</p><p>常见的数据库有：</p><ul><li>Mysql</li><li>SQLServer</li><li>Oracle</li><li>PGSQL</li><li>DB2(IBM)</li></ul><h3 id="数据库存储数据特点"><a href="#数据库存储数据特点" class="headerlink" title="数据库存储数据特点"></a>数据库存储数据特点</h3><p>将数据放到表中，表再放到库中<br>一个数据库可以有多个表，每个表都有一个唯一的表名用来标识自己。<br>表具有一些特性，这些特性定义了数据在表中如何存储，类似Java中的类。<br>表由列组成，也称字段。每个表都由一或多个列组成，类似Java中的属性。<br>表中的数据是按行存储的，每一行类似于Java中的对象。</p><h3 id="数据库管理系统"><a href="#数据库管理系统" class="headerlink" title="数据库管理系统"></a>数据库管理系统</h3><p>简称为DBMS（Database Management System），是用来存储数据的管理系统。</p><p> <strong>DBMS 的种类</strong></p><ul><li><p>层次性数据库</p></li><li><ul><li>最古老的数据库之一，因为突出的缺点，所以很少使用了</li></ul></li><li><p>关系型数据库</p></li><li><ul><li>采用行列二维表结构来管理数据库，类似Excel的结构，使用专用的SQL语言对数据进行控制。</li></ul></li><li><p>关系数据库管理系统的常见种类</p></li><li><ul><li>Oracle &#x3D;&#x3D;&gt; 甲骨文</li><li>SQL Servce &#x3D;&#x3D;&gt; 微软</li><li>DB2 &#x3D;&#x3D;&gt; IBM</li><li>PostgreSQL &#x3D;&#x3D;&gt; 开源</li><li>MySQL &#x3D;&#x3D;&gt; 开源</li></ul></li><li><p>面向对象的数据库</p></li><li><ul><li>XML数据库</li><li>键值存储系统</li><li>DB2</li><li>Redis</li><li>MongoDB</li></ul></li></ul><h3 id="关系型数据库和非关系型数据库"><a href="#关系型数据库和非关系型数据库" class="headerlink" title="关系型数据库和非关系型数据库"></a>关系型数据库和非关系型数据库</h3><p> <strong>关系型数据库</strong>（<strong>RDBS，RELATIONAL DBS</strong>）是建立在关系模型上的数据库系统。关系模型就是指二维表格模型，因而一个关系型数据库就是由二维表及其之间的联系组成的一个数据库系统 ，结构和实体关系。</p><p><img src="/../imgs/first/P4%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93_2023-02-20_09-53-41-16835314326221.png" alt="关系型数据库"></p><p><strong>非关系型数据库（NoSQL）</strong>: redis面向键值对, MongoDB面向文档，HBase面向列存储，NEO4J图形数据库。</p><h3 id="MySQL的体系架构的体系架构"><a href="#MySQL的体系架构的体系架构" class="headerlink" title="MySQL的体系架构的体系架构"></a>MySQL的体系架构的体系架构</h3><p>MySQL采用C&#x2F;S架构。启动MySQL服务可以采用mysqld命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动mysql服务</span><br>mysqld start  <br>mysqld stop<br><span class="hljs-comment"># 链接服务器</span><br>mysql -hlocalhost -P3306 -uroot -p <br><span class="hljs-comment"># 退出mysql服务</span><br>quit  <br></code></pre></td></tr></table></figure><p>上面的mysqld是启动MySQL服务的命令，MySQL还提供了很多其他的工具命令。</p><blockquote><p><strong>MySQL服务器端实用工具程序如下</strong>：<br>● mysqld:SQL后台程序（即MySQL服务器进程）。该程序必须运行之后，客户端才能通过连接服务器来访问数据库。<br>● mysqld_safe：服务器启动脚本。在UNIX和NewWare中推荐使用mysqld_safe来启动mysqld服务器。mysqld_safe增加了一些安全性，例如，当出现错误时，重启服务器并向错误日志文件中写入运行时间信息。<br>● mysql.server：服务器启动脚本。该脚本用于使用包含为特定级别的、运行启动服务器脚本的、运行目录的系统。它调用mysqld_safe来启动MySQL服务器。<br>● mysqld_multi：服务器启动脚本，可以启动或停止系统上安装的多个服务器。<br>● mysamchk：用来描述、检查、优化和维护MyISAM表的实用工具。<br>● mysql.server：服务器启动脚本。在UNIX中的MySQL分发版包括mysql.server脚本。<br>● mysqlbug:MySQL缺陷报告脚本。它可以用来向MySQL邮件系统发送缺陷报告。<br>● mysql_install_db：该脚本用默认权限创建MySQL授予权表。通常只是在系统上首次安装MySQL时执行一次。</p><p><strong>MySQL客户端实用工具程序如下</strong>：<br>● myisampack：压缩MyISAM表以产生更小的只读表的一个工具。<br>● mysql：交互式输入SQL语句或从文件经批处理模式执行它们的命令行工具。<br>● mysqlacceess：检查访问主机名、用户名和数据库组合的权限的脚本。<br>● mysqladmin：执行管理操作的客户程序，例如创建或删除数据库、重载授权表、将表刷新到硬盘上以及重新打开日志文件。Mysqladmin还可以用来检索版本、进程以及服务器的状态信息。<br>● mysqlbinlog：从二进制日志读取语句的工具。在二进制日志文件中包含执行过的语句，可用来帮助系统从崩溃中恢复。<br>● mysqlcheck：检查、修复、分析以及优化表的表维护客户程序。<br>● mysqldump：将MySQL数据库转储到一个文件（例如SQL语句或Tab分隔符文本文件）的客户程序。<br>● mysqlhotcopy：当服务器在运行时，快速备份MyISAM或ISAM表的工具。<br>● mysql import：使用LOAD DATA INFILE将文本文件导入相应的客户程序。<br>● mysqlshow：显示数据库、表、列以及索引相关信息的客户程序。<br>● perror：显示系统或MySQL错误代码含义的工具。</p></blockquote><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><h3 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h3><ul><li>SQL通用语法</li></ul><p>1.SQL语句可以单行或多行书写，以分号结尾；</p><p>2.SQL语句可以使用空格&#x2F;缩进来增强语句的可读性。</p><p>3.Mysql数据库的SQL语句不区分大小写，关键字建议使用大写。</p><p>4.注释：</p><p>单行注释：- - 注释内容或 # 注释内容</p><p>多行注释 ：&#x2F; *注释内容 *&#x2F;（Mysql特有）</p><h3 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h3><p><img src="/../imgs/first/P5%20SQL%E5%88%86%E7%B1%BB_2023-03-02_09-44-26-16835315143273.png" alt="SQL分类"></p><p>DDL(Data Definition Language)——<strong>数据定义语言</strong>，用来定义数据库对象（数据库、表、字段)。</p><p>DML(Data Manipulation Language)——<strong>数据操作语言</strong>，用来对数据表中的数据进行增、删、改。</p><p>DQL(Data Query Language)——<strong>数据查询语言</strong>，用来查询数据库中表的记录。</p><p>DCL(Data Control Language)——<strong>数据控制语言</strong>，用来创建数据库用户、控制数据库的访问权限。</p><h3 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h3><h4 id="一、DDL-数据库操作"><a href="#一、DDL-数据库操作" class="headerlink" title="一、DDL-数据库操作"></a>一、DDL-数据库操作</h4><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Show</span> databases;<br></code></pre></td></tr></table></figure><h4 id="查询所有数据库"><a href="#查询所有数据库" class="headerlink" title="查询所有数据库"></a>查询所有数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> database();<br></code></pre></td></tr></table></figure><h4 id="查询当前数据库"><a href="#查询当前数据库" class="headerlink" title="查询当前数据库"></a>查询当前数据库</h4><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Create</span> database [If <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span>] 数据库名 [<span class="hljs-keyword">Default</span> charset 字符集] [<span class="hljs-keyword">Collate</span> 排序规则]<br></code></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Drop</span> database [If <span class="hljs-keyword">exists</span>] 数据库名；<br></code></pre></td></tr></table></figure><h4 id="使用-x2F-切换"><a href="#使用-x2F-切换" class="headerlink" title="使用&#x2F;切换"></a>使用&#x2F;切换</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">Use 数据库名;<br></code></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h4 id="二、DDL-表操作"><a href="#二、DDL-表操作" class="headerlink" title="二、DDL-表操作"></a>二、DDL-表操作</h4><h4 id="2-1表查询"><a href="#2-1表查询" class="headerlink" title="2.1表查询"></a>2.1表查询</h4><ul><li>查询当前数据库所有表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">table</span>；<br></code></pre></td></tr></table></figure><ul><li>查询表结构</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Desc</span> 表名;<br></code></pre></td></tr></table></figure><ul><li>查询制定表的建表语句</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><h4 id="2-2表创建"><a href="#2-2表创建" class="headerlink" title="2.2表创建"></a>2.2表创建</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">table</span> 表名(<br>            字段<span class="hljs-number">1</span> 类型<span class="hljs-number">1</span>[Comment 字段<span class="hljs-number">1</span>注释],<br>            字段<span class="hljs-number">2</span> 类型<span class="hljs-number">2</span>[Comment 字段<span class="hljs-number">2</span>注释],<br>            字段<span class="hljs-number">3</span> 类型<span class="hljs-number">3</span>[Comment 字段<span class="hljs-number">3</span>注释],<br>            ........<br>            字段n 类型n[Comment 字段n注释]<br>            ) [Comment 表注释];<br><br></code></pre></td></tr></table></figure><p>PS：[…]为可选参数，最后一个字段后没有逗号。</p><h3 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h3><h4 id="一、DML—介绍"><a href="#一、DML—介绍" class="headerlink" title="一、DML—介绍"></a>一、DML—介绍</h4><p>DML（Data Manipulation Language)数据操作语言，用来对数据库中表的数据记录进行增删改操作。</p><ul><li>添加&#x2F;插入数据——&gt;<em><strong>Insert</strong></em></li><li>修改&#x2F;更新数据——&gt;<em><strong>Update</strong></em></li><li>删除数据——&gt;<em><strong>Delete</strong></em></li></ul><h4 id="二、DML—语法"><a href="#二、DML—语法" class="headerlink" title="二、DML—语法"></a>二、DML—语法</h4><h5 id="2-1-DML—添加-x2F-插入数据"><a href="#2-1-DML—添加-x2F-插入数据" class="headerlink" title="2.1   DML—添加&#x2F;插入数据"></a>2.1   DML—添加&#x2F;插入数据</h5><p>1.给指定字段添加&#x2F;插入数据 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Insert</span> <span class="hljs-keyword">into</span> 表名 ( 字段<span class="hljs-number">1</span>,字段<span class="hljs-number">2</span>,...) <span class="hljs-keyword">values</span>( 值<span class="hljs-number">1</span>,值<span class="hljs-number">2</span>,...)；<br><br><br>eg:<br># 插入新用户<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> employee(id, workno, workname, sex, age, idcard, jointime) <span class="hljs-keyword">values</span>                               (<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;jerry&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>,<span class="hljs-number">10</span>,<span class="hljs-string">&#x27;001&#x27;</span>,<span class="hljs-string">&#x27;2001-8-19&#x27;</span> );<br></code></pre></td></tr></table></figure><p>2.给全部字段添加&#x2F;插入数据 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Insert</span> <span class="hljs-keyword">into</span> 表名 <span class="hljs-keyword">values</span> (值<span class="hljs-number">1</span>,值<span class="hljs-number">2</span>,...);<br><br>eg:<br># 插入新用户<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> employee <span class="hljs-keyword">values</span> ( <span class="hljs-number">2</span>,<span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;tom&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>, <span class="hljs-number">18</span>, <span class="hljs-string">&#x27;002&#x27;</span> , <span class="hljs-string">&#x27;2001-01-10 &#x27;</span>);<br></code></pre></td></tr></table></figure><p>3.批量添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Insert</span> <span class="hljs-keyword">into</span> 表名 （字段<span class="hljs-number">1</span>,字段<span class="hljs-number">2</span>,...） <span class="hljs-keyword">values</span> (值<span class="hljs-number">1</span>，值<span class="hljs-number">2.</span>..),(值<span class="hljs-number">1</span>，值<span class="hljs-number">2.</span>..),(值<span class="hljs-number">1</span>，值<span class="hljs-number">2.</span>..),<br><br><span class="hljs-keyword">Insert</span> <span class="hljs-keyword">into</span> 表名 <span class="hljs-keyword">values</span> (值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，...),(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，...),(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，...),<br>eg：<br>#批量插入新用户<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span>  employee <span class="hljs-keyword">values</span> (<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;3&#x27;</span> ,<span class="hljs-string">&#x27;jack&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>,<span class="hljs-number">15</span> ,<span class="hljs-string">&#x27;003&#x27;</span>,<span class="hljs-string">&#x27;2005-5-5&#x27;</span>  ),(<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;4&#x27;</span> ,<span class="hljs-string">&#x27;jerry&#x27;</span>,<span class="hljs-string">&#x27;女&#x27;</span>,<span class="hljs-number">15</span> ,<span class="hljs-string">&#x27;004&#x27;</span>,<span class="hljs-string">&#x27;2006-5-5&#x27;</span> );<br></code></pre></td></tr></table></figure><p>注意项：<br>1.插入数据时，指定字段顺序需要与值的顺序一一对应。<br>2.字符串和日期型数据应包含在引号内。<br>3.插入的数据大小，应在字段（数据类型）的规定范围内。</p><h5 id="2-2DML—修改-x2F-更新数据"><a href="#2-2DML—修改-x2F-更新数据" class="headerlink" title="2.2DML—修改&#x2F;更新数据"></a>2.2DML—修改&#x2F;更新数据</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Update</span> 表名 <span class="hljs-keyword">set</span> 字段<span class="hljs-number">1</span><span class="hljs-operator">=</span>值<span class="hljs-number">1</span>,字段<span class="hljs-number">2</span><span class="hljs-operator">=</span>值<span class="hljs-number">2</span>,字段<span class="hljs-number">3</span><span class="hljs-operator">=</span>值<span class="hljs-number">3</span>,...[<span class="hljs-keyword">Where</span> 条件列表];<br><br>eg：<br>## <span class="hljs-number">1</span><br><span class="hljs-comment">-- 修改id为1 的数据，将name修改为itheima</span><br><span class="hljs-keyword">update</span> employee <span class="hljs-keyword">set</span>  workname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;itheima&#x27;</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span> ;<br><br><span class="hljs-comment">-- 修改id为1 的数据 ，将name修改为 小明, 性别修改为男</span><br><span class="hljs-keyword">update</span>  employee <span class="hljs-keyword">set</span> workname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;小明&#x27;</span> ,sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br><br><span class="hljs-comment">-- 将所有的员工入职日期修改为 2023-1-1</span><br><span class="hljs-keyword">update</span>  employee <span class="hljs-keyword">set</span> jointime<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2023-1-1&#x27;</span> <span class="hljs-keyword">where</span> id;<br><br></code></pre></td></tr></table></figure><p>注意：当没有Where条件语句时，会修改整张表的所有数据。</p><h5 id="2-3DML—删除数据"><a href="#2-3DML—删除数据" class="headerlink" title="2.3DML—删除数据"></a>2.3DML—删除数据</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Delete</span> <span class="hljs-keyword">from</span> 表名 [<span class="hljs-keyword">Where</span> 条件列表];<br><br>eg：<br>## <span class="hljs-number">2</span><br><span class="hljs-comment">-- 删除性别为女的员工</span><br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span>  employee <span class="hljs-keyword">where</span> sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span>;<br><br><span class="hljs-comment">-- 删除所有员工</span><br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> employee ;<br></code></pre></td></tr></table></figure><h3 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h3><h4 id="一、DQL-介绍"><a href="#一、DQL-介绍" class="headerlink" title="一、DQL-介绍"></a>一、DQL-介绍</h4><p>DQL（Data Query Language)数据查询语言，用来查询数据库中表的数据记录。（查询关键字：Select）</p><h4 id="二、DQL-查询语法"><a href="#二、DQL-查询语法" class="headerlink" title="二、DQL-查询语法"></a>二、DQL-查询语法</h4><ul><li><h5 id="DQL语法结构"><a href="#DQL语法结构" class="headerlink" title="DQL语法结构"></a>DQL语法结构</h5></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">Select</span><br>         字段列表<br><span class="hljs-keyword">From</span> <br>         表名列表<br><span class="hljs-keyword">Where</span> <br>         条件列表<br><span class="hljs-keyword">Group</span> <span class="hljs-keyword">by</span><br>         分组字段列表<br><span class="hljs-keyword">Having</span><br>         分组后条件列表<br><span class="hljs-keyword">Order</span> <span class="hljs-keyword">by</span> <br>         排序字段列表<br>Limit<br>        分页参数<br></code></pre></td></tr></table></figure><p><img src="/../imgs/first/DQL%E6%9F%A5%E8%AF%A2%E5%9B%BE%E9%89%B4_2023-03-30_10-10-38-16835316305175.png" alt="DQL查询分支图鉴"></p><h5 id="2-1-基础查询"><a href="#2-1-基础查询" class="headerlink" title="2.1 基础查询"></a>2.1 基础查询</h5><p>查询多个字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">Select</span> 字段<span class="hljs-number">1</span>，字段<span class="hljs-number">2</span>，字段<span class="hljs-number">3.</span>..<span class="hljs-keyword">From</span> 表名;<br><br># eg<br><span class="hljs-comment">-- 基本查询</span><br><span class="hljs-comment">-- 1.查询自定字段 name , workno , age 返回</span><br><span class="hljs-keyword">select</span> name,workno,age <span class="hljs-keyword">from</span> emp;<br><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">Select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">From</span> 表名;<br><br> # eg<br><span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp; ##这个一般不建议用;<br></code></pre></td></tr></table></figure><p>其中*代表全部字段，不建议使用。</p><h6 id="字段设置别名-as可省略）"><a href="#字段设置别名-as可省略）" class="headerlink" title="字段设置别名(as可省略）"></a>字段设置别名(as可省略）</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> 字段<span class="hljs-number">1</span>[<span class="hljs-keyword">as</span> 别名<span class="hljs-number">1</span>],字段<span class="hljs-number">2</span>[<span class="hljs-keyword">as</span> 别名<span class="hljs-number">2</span>]...<span class="hljs-keyword">From</span> 表名;<br><br><br># eg<br><span class="hljs-comment">-- 3.查询所有员工的工作地址</span><br><span class="hljs-keyword">select</span> address <span class="hljs-keyword">from</span>  emp;<br># 使用<span class="hljs-keyword">as</span>起别名 把原本员工地址 改名成了工作地址<br><span class="hljs-keyword">select</span> address <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;工作地址&#x27;</span> <span class="hljs-keyword">from</span> emp;<br># 不带<span class="hljs-keyword">as</span>也可以<br><span class="hljs-keyword">select</span> address <span class="hljs-string">&#x27;工作地址111&#x27;</span> <span class="hljs-keyword">from</span> emp;<br><br></code></pre></td></tr></table></figure><h6 id="查询并去除重复记录结果-去重"><a href="#查询并去除重复记录结果-去重" class="headerlink" title="查询并去除重复记录结果(去重)"></a>查询并去除重复记录结果(去重)</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> <span class="hljs-keyword">distinct</span> 字段列表 <span class="hljs-keyword">From</span> 表名；<br><br>#eg<br><span class="hljs-comment">-- 4. 查询公司员工的上班地址（不要重复）</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> address <span class="hljs-keyword">from</span>  emp;<br><br></code></pre></td></tr></table></figure><h5 id="2-2条件查询（Where）"><a href="#2-2条件查询（Where）" class="headerlink" title="2.2条件查询（Where）"></a>2.2条件查询（Where）</h5><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> 字段列表 <span class="hljs-keyword">From</span> 表名 <span class="hljs-keyword">Where</span> 条件列表;<br></code></pre></td></tr></table></figure><p><strong>条件（用于限定查询范围）</strong></p><blockquote><pre><code class="hljs">| 比较运算符   | 功能                                          || ------------ | --------------------------------------------- || &gt;            | 大于                                          || =            | 大于等于                                      || &lt;            | 小于                                          || &lt;=           | 小于等                                        || Between…and… | 在某个范围之内（包含最小、最大值）            || In(...)      | 在in之后的列表中的值，多选一                  || Like 占位符  | 模糊匹配（ _ 匹配单个字符，% 匹配任意个字符） || Is null      | 是null值                                      |    | 逻辑运算符 | 功能                           || ---------- | ------------------------------ || And 或 &amp;&amp;  | 并且（多个条件且同时成立）     || Or         | 或者（多个条件中任意一个成立） || Not 或 ！  | 非，不是                       |</code></pre></blockquote><h5 id="2-3-聚合函数"><a href="#2-3-聚合函数" class="headerlink" title="2.3 聚合函数"></a>2.3 聚合函数</h5><p>（Max、Min、Avg、Sum、Count）</p><p>概念：聚合函数将一列数据（字段）作为一个整体，进行纵向计算。</p><ul><li>常见聚合函数</li></ul><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>Max</td><td>最大值</td></tr><tr><td>Min</td><td>最小值</td></tr><tr><td>Avg</td><td>平均值</td></tr><tr><td>Sum</td><td>求和</td></tr><tr><td>Count</td><td>统计数量</td></tr></tbody></table><p><em><strong>ps：所有的null值不参与聚合函数运算。</strong></em></p><p>使用语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> 聚合函数（字段列表） <span class="hljs-keyword">From</span> 表名；<br></code></pre></td></tr></table></figure><p>例：统计emp表中id字段的数量。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> <span class="hljs-built_in">count</span>(id) <span class="hljs-keyword">from</span> emp;<br><br># eg<br><span class="hljs-comment">-- 聚合函数</span><br><span class="hljs-comment">-- 1.统计改企业员工数量</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> emp_DQL;<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(id) <span class="hljs-keyword">from</span> emp_DQL;<br><br><span class="hljs-comment">-- 2.统计该企业员工的最大年龄</span><br><span class="hljs-keyword">select</span>  <span class="hljs-built_in">max</span>(age) <span class="hljs-keyword">from</span>  emp_DQL;<br><br><span class="hljs-comment">-- 3.统计该企业员工的平均年龄</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(age) <span class="hljs-keyword">from</span> emp_DQL;<br><br><span class="hljs-comment">-- 4.统计该企业员工的最小年龄</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">min</span>(age) <span class="hljs-keyword">from</span> emp_DQL;<br><br><span class="hljs-comment">-- 5. 统计上海地区员工的年龄总和</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(age) <span class="hljs-keyword">from</span> emp_DQL <span class="hljs-keyword">where</span> adress <span class="hljs-operator">=</span><span class="hljs-string">&#x27;上海&#x27;</span>;<br></code></pre></td></tr></table></figure><h5 id="2-4-分组查询（Group-by）"><a href="#2-4-分组查询（Group-by）" class="headerlink" title="2.4 分组查询（Group by）"></a>2.4 分组查询（Group by）</h5><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> 字段列表 <span class="hljs-keyword">From</span> 表名 [<span class="hljs-keyword">Where</span> 条件] <span class="hljs-keyword">Group</span> <span class="hljs-keyword">by</span> 分组字段名 [<span class="hljs-keyword">Having</span> 分组后过滤条件];<br></code></pre></td></tr></table></figure><p>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义。</p><ul><li><em><strong>*Where与Having区别*</strong></em></li></ul><table><thead><tr><th>条件</th><th>区别</th><th>是否对聚合函数判断</th></tr></thead><tbody><tr><td>Where</td><td>分组前过滤，不满足Where条件的数据不参与分组；</td><td>×</td></tr><tr><td>Having</td><td>分组之后对结果进行过滤；</td><td>√</td></tr></tbody></table><ul><li>执行顺序：Where👉聚合函数👉Having</li></ul><p>例：表emp（字段:id,workno,name,gender,age,idcard,workadress,entrydate)<br>需求：查询年龄小于45岁的员工，并根据工作地址分组，获取员工数量大于等于3的工作地址。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> workadress ,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)  <br><span class="hljs-keyword">from</span> emp <br><span class="hljs-keyword">where</span> age <span class="hljs-operator">&gt;</span> <span class="hljs-number">45</span> <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> workadress <br><span class="hljs-keyword">having</span> workadress <span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span>;<br><br># eg<br><span class="hljs-comment">-- 分组查询</span><br><br><span class="hljs-comment">-- 1.根据性别分组，统计男性员工 和 女性员工的数量</span><br><span class="hljs-keyword">select</span>  sex, <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)  <span class="hljs-keyword">from</span> emp_DQL <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sex ;<br><br><span class="hljs-comment">-- 2.根据性别分组，统计男性员工 和 女性员工的平均年龄</span><br><span class="hljs-keyword">select</span> sex,<span class="hljs-built_in">AVG</span>(age) <span class="hljs-keyword">from</span> emp_DQL <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sex;<br><br><span class="hljs-comment">-- 3.查询年龄小于25的员工，并且根据工作地址分组，获取员工数量大于等于3的工作地址</span><br><span class="hljs-keyword">select</span> adress, <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>)  <span class="hljs-keyword">from</span> emp_DQL <span class="hljs-keyword">WHERE</span> age<span class="hljs-operator">&lt;</span><span class="hljs-number">25</span> <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> adress <span class="hljs-keyword">HAVING</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><h5 id="2-5-排序查询（Order-by）"><a href="#2-5-排序查询（Order-by）" class="headerlink" title="2.5 排序查询（Order by）"></a>2.5 排序查询（Order by）</h5><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> 字段列表 <span class="hljs-keyword">From</span> 表名 <span class="hljs-keyword">Order</span> <span class="hljs-keyword">by</span> 字段<span class="hljs-number">1</span> 排序方式<span class="hljs-number">1</span>，字段<span class="hljs-number">2</span> 排序方式<span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><p>排序方式<br>ASC：升序（默认值）<br>DSC：降序</p><p>注意：如果多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序。</p><p>例：表emp（字段:id,workno,name,sex,age,idcard,workadress,entrydate)<br>需求：根据年龄对公司的员工进行升序排序，年龄相同，再按照入职时间进行降序排序。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> emp<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> age <span class="hljs-keyword">asc</span>,entrydate dsc;<br><br><br># eg<br><span class="hljs-comment">-- 排序查询</span><br><span class="hljs-comment">-- 1.根据年龄对公司的员工进行升序排序</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span>  emp_DQL <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> age <span class="hljs-keyword">ASC</span>;<br><br><span class="hljs-comment">-- 2.根据入职时间，对员工进行降序排序</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp_DQL <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span>  entrydate <span class="hljs-keyword">desc</span> ;<br><br><span class="hljs-comment">-- 3.根据年龄对公司的员工进行升序排序，如果年龄相同，再按照入职时间进行降序排序</span><br><span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp_DQL <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> age <span class="hljs-keyword">asc</span> ,entrydate <span class="hljs-keyword">desc</span> ;<br></code></pre></td></tr></table></figure><h5 id="2-6分页查询（Limit）"><a href="#2-6分页查询（Limit）" class="headerlink" title="2.6分页查询（Limit）"></a>2.6分页查询（Limit）</h5><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> 字段列表 <span class="hljs-keyword">From</span> 表名 Limit 起始索引，查询记录数;<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Select</span> 字段列表 <span class="hljs-keyword">From</span> 表名 Limit （查询页码 <span class="hljs-number">-1</span>) <span class="hljs-operator">*</span> 每页查询记录数，查询记录数;<br></code></pre></td></tr></table></figure><p>注意：<br>①起始索引从0开始，起始索引&#x3D;（查询页码 -1) * 每页查询记录数。<br>②分页查询是数据库的方言，不同的数据库有不同的实现，Mysql中是Limit。<br>③如果查询的是第一页的数据，起始索引可以省略简写为 Limit 10。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"># eg <br><br><span class="hljs-comment">-- 分页查询</span><br><span class="hljs-comment">-- 1.查询第1页员工数据，每页展示10条数据</span><br><span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp_DQL limit <span class="hljs-number">0</span>,<span class="hljs-number">10</span>;<br> # 简写<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp_DQL limit <span class="hljs-number">10</span>;<br><br><span class="hljs-comment">-- 2.查询第2页员工数据，每页展示10条数据  规则 ：(页码-1 ) * 页面展示数   2-1*10 =10</span><br><span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp_DQL limit <span class="hljs-number">10</span>,<span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><h5 id="案例练习"><a href="#案例练习" class="headerlink" title="案例练习"></a>案例练习</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- DQL 语句练习</span><br><span class="hljs-comment">-- 1.查询年龄为20,21,22,23岁的女性员工信息。</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span>  emp_DQL<br>    <span class="hljs-keyword">where</span> sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;女&#x27;</span><br>         <span class="hljs-keyword">and</span> age<br>              <span class="hljs-keyword">in</span> (<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>);<br><span class="hljs-comment">-- 2.查询性别为 男 ，并且年龄在 20-40 岁(含)以内的姓名为三个字的员工。</span><br><span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp_DQL<br>    <span class="hljs-keyword">where</span> sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span><br>        <span class="hljs-keyword">and</span> age  <span class="hljs-keyword">between</span> <span class="hljs-number">20</span> <span class="hljs-keyword">and</span> <span class="hljs-number">40</span><br>            <span class="hljs-keyword">and</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;___&#x27;</span>;<br><span class="hljs-comment">-- 3，统计员工表中，年龄小于20岁的 ，男性员工和女性员工的人数</span><br><span class="hljs-keyword">select</span> sex,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> emp_DQL <span class="hljs-keyword">where</span> age<span class="hljs-operator">&lt;</span><span class="hljs-number">60</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sex;<br><br><span class="hljs-comment">-- 4.查询所有年龄小于等于20岁员工的姓名和年龄，并对查询结果按年龄升序排序，如果年龄相同按入职时间降序排序。</span><br><span class="hljs-keyword">select</span> name , age <span class="hljs-keyword">from</span> emp_DQL <span class="hljs-keyword">where</span> age<span class="hljs-operator">&lt;=</span><span class="hljs-number">20</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span>  age <span class="hljs-keyword">asc</span> , entrydate <span class="hljs-keyword">desc</span> ;<br><br><span class="hljs-comment">-- 5.查询性别为男，且年龄在15-25 岁(含)以内的前5个员工信息，对查询的结果按年龄升序排序，年龄相同按入职时间升序排序。</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp_DQL <br><span class="hljs-keyword">where</span> sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;男&#x27;</span> <span class="hljs-keyword">and</span> age <span class="hljs-keyword">between</span> <span class="hljs-number">15</span> <span class="hljs-keyword">and</span> <span class="hljs-number">25</span> <br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> age <span class="hljs-keyword">asc</span> ,entrydate <span class="hljs-keyword">asc</span> <br>limit <span class="hljs-number">0</span>,<span class="hljs-number">20</span> ;<br></code></pre></td></tr></table></figure><p><img src="/../imgs/first/DQL%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F_2023-03-31_10-05-49-16835317073667.png" alt="DQL编写顺序顺序与执行顺序"></p><h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h3><h4 id="一、DCL介绍"><a href="#一、DCL介绍" class="headerlink" title="一、DCL介绍"></a>一、DCL介绍</h4><p>DCL（Data Control Language）数据控制语言，用来管理数据库用户、控制数据库的访问权限。</p><h4 id="二、DCL语句"><a href="#二、DCL语句" class="headerlink" title="二、DCL语句"></a>二、DCL语句</h4><h5 id="2-1DCL-用户管理"><a href="#2-1DCL-用户管理" class="headerlink" title="2.1DCL-用户管理"></a>2.1DCL-用户管理</h5><ul><li><strong>查询用户</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">Use mysql; <br><span class="hljs-keyword">Select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><ul><li><p><strong>创建用户</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">User</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span> Identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;密码&#x27;</span>;<br><br># eg<br><span class="hljs-comment">-- 创建用户 itcast ,只能够在当前主机localhost访问，密码123456；</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;itcast&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> identified  <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><br><br><span class="hljs-comment">-- 创建用户 bqm  ,可以在任意主机访问该数据库，密码123456；</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;bqm&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified  <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure></li><li><p><strong>修改用户密码</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Alter</span> <span class="hljs-keyword">User</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span> Identified <span class="hljs-keyword">with</span> mysql_native_password <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;新密码&#x27;</span>;<br> # eg<br> <span class="hljs-comment">-- 修改用户 bqm 的访问密码为654321；</span><br>  # 注意修改密码时  后面的主机名为单引号 <span class="hljs-string">&#x27;</span><br><span class="hljs-string">ALTER USER &#x27;</span>bqm<span class="hljs-string">&#x27;@&#x27;</span><span class="hljs-operator">%</span><span class="hljs-string">&#x27; IDENTIFIED BY &#x27;</span><span class="hljs-number">654321</span><span class="hljs-string">&#x27;;</span><br><span class="hljs-string"></span><br><span class="hljs-string">-- 修改用户 root 的访问密码为123456；</span><br><span class="hljs-string">ALTER USER &#x27;</span>root<span class="hljs-string">&#x27;@&#x27;</span><span class="hljs-operator">%</span><span class="hljs-string">&#x27; IDENTIFIED BY &#x27;</span><span class="hljs-number">123456</span><span class="hljs-string">&#x27;;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>删除用户</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Drop</span> <span class="hljs-keyword">User</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@‘主机名<span class="hljs-string">&#x27;;</span><br><span class="hljs-string"></span><br><span class="hljs-string"># eg</span><br><span class="hljs-string">-- 删除itcast@localhost用户；</span><br><span class="hljs-string">drop user &#x27;</span>itcast<span class="hljs-string">&#x27;@&#x27;</span>localhost<span class="hljs-string">&#x27;;</span><br></code></pre></td></tr></table></figure><p><em><strong>注意</strong></em>:<br>①’localhost’ — 当前主机，主机名可以使用 % 通配，代表任意主机。<br>②DCL用户管理主要为]DBA数据库管理员使用。</p><h5 id="2-2DCL-权限控制"><a href="#2-2DCL-权限控制" class="headerlink" title="2.2DCL-权限控制"></a>2.2DCL-权限控制</h5><ul><li><strong>Mysql中常用权限</strong></li></ul><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>ALL，all privileges</td><td>所有权限</td></tr><tr><td>Select</td><td>查询数据</td></tr><tr><td>Insert</td><td>插入数据</td></tr><tr><td>Update</td><td>更新，修改数据</td></tr><tr><td>Detele</td><td>删除数据</td></tr><tr><td>Alter</td><td>修改表</td></tr><tr><td>Drop</td><td>删除数据库&#x2F;表&#x2F;视图</td></tr><tr><td>Create</td><td>创建数据库&#x2F;表</td></tr></tbody></table><ul><li><strong>查询权限</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Show</span> grants <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br># eg<br><span class="hljs-comment">-- 查询权限</span><br> <span class="hljs-keyword">show</span> grants  <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;bqm&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><strong>授予权限</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Grant</span> 权限列表 <span class="hljs-keyword">on</span> 数据库名.表名 <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br># eg<br><span class="hljs-comment">-- 授予权限</span><br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">on</span> itcast.<span class="hljs-operator">*</span> <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;bqm&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li><strong>撤销权限</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Revoke</span> 权限列表 <span class="hljs-keyword">on</span> 数据库名.表名 <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br># eg<br><span class="hljs-comment">-- 撤销权限</span><br><span class="hljs-keyword">revoke</span>  <span class="hljs-keyword">all</span> privileges ,<span class="hljs-keyword">grant</span> option <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bqm&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure></li></ul><h2 id="三、函数"><a href="#三、函数" class="headerlink" title="三、函数"></a>三、函数</h2><p>函数是指一段可以直接被另一段程序调用的程序或代码</p><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><ul><li><strong>Mysql中常见的字符串函数</strong></li></ul><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>Concat(s1,s2,s3…sn)</td><td>字符串拼接，将S1,S2,S3…Sn拼接成一个字符串（拼接字符串中有null值，则返回结果null)</td></tr><tr><td>Lower(str)</td><td>将字符串 str 全部转化为小写。</td></tr><tr><td>Upper(str)</td><td>将字符串 str 全部转化为大写。</td></tr><tr><td>Lpad(str,n,pad)</td><td>左填充，用字符串 pad 对 str 字符串的左边进行填充，达到 n 个字符串长度。</td></tr><tr><td>Rpad(str,n,pad)</td><td>左填充，用字符串 pad 对 str 字符串的右边进行填充，达到 n 个字符串长度。</td></tr><tr><td>Trim(str)</td><td>去掉字符串头部和尾部的空格。</td></tr><tr><td>Substring(str,strart,len)</td><td>截取（返回） 字符串Str，从Strart位置起，共 len 个字符。</td></tr></tbody></table><p>Select 字符串函数（参数）;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sql">#<span class="hljs-comment">--------------------------- 函数演示 ---------------------------</span><br><br><span class="hljs-comment">-- concat  字符串拼接</span><br><br>    <span class="hljs-keyword">select</span> concat(<span class="hljs-string">&#x27;hello , Bqm&#x27;</span>);<br><br><span class="hljs-comment">-- lower   转为小写</span><br>    <span class="hljs-keyword">select</span> <span class="hljs-built_in">lower</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>);<br><br><span class="hljs-comment">-- upper  转为大写</span><br>    <span class="hljs-keyword">select</span> <span class="hljs-built_in">lower</span>(<span class="hljs-string">&#x27;hello&#x27;</span>);<br><br><span class="hljs-comment">-- lpad  左填充选定字符串之前</span><br>            #选定字符串   填充的长度    填充的内容<br>    <span class="hljs-keyword">select</span> lpad(<span class="hljs-string">&#x27;ll0&#x27;</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;he&#x27;</span>);<br><span class="hljs-comment">-- rpad  右填充选定字符串之后</span><br>    <span class="hljs-keyword">select</span>  rpad(<span class="hljs-string">&#x27;he&#x27;</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;llo&#x27;</span>);<br><br><span class="hljs-comment">-- trim 去除空格 (头部和尾部)</span><br>    <span class="hljs-keyword">select</span>  <span class="hljs-built_in">trim</span>(<span class="hljs-string">&#x27; hello  bqm &#x27;</span>);<br><br><span class="hljs-comment">-- substring   截取</span><br>                                #截取第一个字符串  截取长度<br>    <span class="hljs-keyword">select</span> <span class="hljs-built_in">substring</span>(<span class="hljs-string">&#x27;hello bqm&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>);<br><br></code></pre></td></tr></table></figure><p>案例需求：由于业务变更，企业员工的工号统一为5位数，不足5位数的前面补0。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Update</span> 表名 <span class="hljs-keyword">set</span> workno<span class="hljs-operator">=</span>lpad(workno,<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;0&#x27;</span>);<br><br><span class="hljs-comment">-- 案例</span><br>  <span class="hljs-comment">-- 案例需求：由于业务变更，企业员工的工号统一为5位数，不足5位数的前面补0</span><br>     <span class="hljs-keyword">update</span> emp <span class="hljs-keyword">set</span> workno <span class="hljs-operator">=</span> lpad(workno,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>);<br># <span class="hljs-number">1</span>,<span class="hljs-number">00001</span>,张三,男,<span class="hljs-number">18</span>,<span class="hljs-number">10</span>,上海,<span class="hljs-number">2015</span><span class="hljs-number">-01</span><span class="hljs-number">-02</span><br># <span class="hljs-number">2</span>,<span class="hljs-number">00002</span>,李四,男,<span class="hljs-number">15</span>,<span class="hljs-number">11</span>,北京,<span class="hljs-number">2019</span><span class="hljs-number">-02</span><span class="hljs-number">-03</span><br># <span class="hljs-number">3</span>,<span class="hljs-number">00003</span>,王五,女,<span class="hljs-number">18</span>,<span class="hljs-number">12</span>,上海,<span class="hljs-number">2012</span><span class="hljs-number">-03</span><span class="hljs-number">-02</span><br># <span class="hljs-number">4</span>,<span class="hljs-number">00004</span>,赵六,男,<span class="hljs-number">17</span>,<span class="hljs-number">13</span>,深圳,<span class="hljs-number">2015</span><span class="hljs-number">-04</span><span class="hljs-number">-04</span><br># <span class="hljs-number">5</span>,<span class="hljs-number">00005</span>,冯七,女,<span class="hljs-number">28</span>,<span class="hljs-number">14</span>,宝鸡,<span class="hljs-number">2015</span><span class="hljs-number">-05</span><span class="hljs-number">-03</span><br># <span class="hljs-number">6</span>,<span class="hljs-number">00006</span>,老八,男,<span class="hljs-number">58</span>,<span class="hljs-number">15</span>,广东,<span class="hljs-number">2018</span><span class="hljs-number">-04</span><span class="hljs-number">-02</span><br></code></pre></td></tr></table></figure><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><ul><li><strong>Mysql中常见的数值函数</strong></li></ul><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>Ceil(x)</td><td>向上取整</td></tr><tr><td>Floor(x)</td><td>向下取整</td></tr><tr><td>Mod(x,y)</td><td>返回 x 除以 y 的模（模即为 x&#x2F;y 的余数）</td></tr><tr><td>Round(x,y)</td><td>求参数 x 四舍五入的值，保留 y 位小数</td></tr><tr><td>Rand()</td><td>返回 0~1 间的随机数</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"># <span class="hljs-comment">----------------------- 数值函数 ------------------------------</span><br><span class="hljs-comment">-- ceil  向上取整</span><br>    <span class="hljs-keyword">select</span>  <span class="hljs-built_in">ceil</span>( <span class="hljs-number">1.5</span>);<br><br><span class="hljs-comment">-- floor  向下取整</span><br>    <span class="hljs-keyword">select</span>  <span class="hljs-built_in">floor</span>( <span class="hljs-number">1.5</span>);<br><br><span class="hljs-comment">-- mod   取模 (相除取余)</span><br>   <span class="hljs-keyword">select</span> <span class="hljs-built_in">mod</span>(<span class="hljs-number">5</span>,<span class="hljs-number">4</span>);<br><br><span class="hljs-comment">-- rand   求随机数</span><br>   <span class="hljs-keyword">select</span>  rand();<br><br><span class="hljs-comment">-- round  求参数 x 四舍五入的值，保留 y 位小数</span><br>    <span class="hljs-keyword">select</span>  round(<span class="hljs-number">2.36</span>,<span class="hljs-number">2</span>);<br><br><br><span class="hljs-comment">-- 案例需求：通过数据库的函数，生成一个六位数的随机验证码。</span><br>    <span class="hljs-keyword">select</span> lpad(round(rand()<span class="hljs-operator">*</span><span class="hljs-number">1000000</span>,<span class="hljs-number">0</span>), <span class="hljs-number">6</span>,<span class="hljs-string">&#x27;0&#x27;</span>);<br><br></code></pre></td></tr></table></figure><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><ul><li><strong>Mysql中常见的日期函数</strong></li></ul><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>Curdate()</td><td>返回当前日期</td></tr><tr><td>Curtime()</td><td>返回当前时间</td></tr><tr><td>Now()</td><td>返回当前日期和时间</td></tr><tr><td>Year(date)</td><td>返回指定 date 的年份</td></tr><tr><td>Month(date)</td><td>返回指定 date 的月份</td></tr><tr><td>Day(date)</td><td>返回指定 date 的日期</td></tr><tr><td>Date_add(date,Interval expr type)</td><td>返回日期（时间值加上一个时间间隔expr后的时间值)</td></tr><tr><td>Datediff(date1,date2)</td><td>返回 date1 -date2 的时间天数</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sql"># <span class="hljs-comment">----------------- 日期函数 --------------------</span><br><span class="hljs-comment">-- curdate()  返回当前日期</span><br>    <span class="hljs-keyword">select</span> curdate();<br><br><span class="hljs-comment">-- curtime()  返回当前时间</span><br>    <span class="hljs-keyword">select</span> curtime();<br><br><span class="hljs-comment">-- now()       返回当前日期和时间</span><br>    <span class="hljs-keyword">select</span> now();<br><br><span class="hljs-comment">-- YEAR,MONTH,DAY</span><br>    <span class="hljs-keyword">select</span> <span class="hljs-keyword">year</span>(now());<br>    <span class="hljs-keyword">select</span> <span class="hljs-keyword">month</span>(now());<br>    <span class="hljs-keyword">select</span> <span class="hljs-keyword">day</span>(now());<br><br><span class="hljs-comment">-- date_add  当前时间往后推</span><br>    <span class="hljs-keyword">select</span> date_add(now(),<span class="hljs-type">interval</span> <span class="hljs-number">70</span> <span class="hljs-keyword">day</span> );<br><br><span class="hljs-comment">-- datediff 两个指令之间相差的天数 第一个时间减去第二个时间</span><br>    <span class="hljs-keyword">select</span>  datediff(<span class="hljs-string">&#x27;2023-4-3&#x27;</span>,<span class="hljs-string">&#x27;2020-10-19&#x27;</span>);<br><br><span class="hljs-comment">-- 案例</span><br> <span class="hljs-comment">-- 案例需求：查询所有员工的入职天数，并根据入职天数倒序排序。</span><br>    <span class="hljs-keyword">select</span>  name, datediff(curdate(), entry) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;jion&#x27;</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> jion <span class="hljs-keyword">desc</span> ;<br></code></pre></td></tr></table></figure><h3 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h3><p>可以在sql语句中实现条件筛选。从而提高语句效率</p><ul><li><strong>Mysql中常见的流程函数</strong></li></ul><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>IF（条件表达式，值1，值2）</td><td>IF（条件表达式，值1，值2）</td></tr><tr><td>IFNULL(value1,value2)</td><td>如果 value1 不为空，返回 value1,否则返回 value2</td></tr><tr><td>Case when [ 条件表达式 ] then [ res1 ]… else [ default ] end</td><td>如果 条件表达式 为true，返回 res1,…否则返回 default 默认值</td></tr><tr><td>Case [ expr ] when [ value1 ] then [ res1 ] …else [ default ] end</td><td>如果 expr 的值等于 value1 ,返回 res1,…否则返回 default 默认值</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sql"># <span class="hljs-comment">-------  ---------- 流程控制函数 -----------------------</span><br><span class="hljs-comment">-- if       如果条件表达式结果为true，则返回值1，否则返回值2</span><br>    <span class="hljs-keyword">select</span>  if(<span class="hljs-literal">true</span> , <span class="hljs-string">&#x27;ok&#x27;</span>,<span class="hljs-string">&#x27;error&#x27;</span>;<br>    <span class="hljs-keyword">select</span>  if(<span class="hljs-literal">false</span> , <span class="hljs-string">&#x27;ok&#x27;</span>,<span class="hljs-string">&#x27;error&#x27;</span>);<br><br><span class="hljs-comment">-- if null  如果 value1 不为空，返回 value1,否则返回 value2</span><br>    <span class="hljs-keyword">select</span> ifnull(<span class="hljs-string">&#x27;ok&#x27;</span>,<span class="hljs-string">&#x27;default&#x27;</span>);<br>    <span class="hljs-keyword">select</span> ifnull(<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;default&#x27;</span>);<br><br><span class="hljs-comment">-- case when then else end</span><br><span class="hljs-comment">-- 需求：1.查询emp表的员工姓名和工作地址（当地址为北京/上海时显示为一线城市，其他城市显示为二线城市）。</span><br><span class="hljs-keyword">select</span><br>   name,<br>       (<span class="hljs-keyword">case</span> address <span class="hljs-keyword">when</span> <span class="hljs-string">&#x27;北京&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;一线城市&#x27;</span> <span class="hljs-keyword">when</span> <span class="hljs-string">&#x27;上海&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;一线城市&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;二线城市&#x27;</span> <span class="hljs-keyword">end</span> )<span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;工作地址&#x27;</span><br>        <span class="hljs-keyword">from</span> emp;<br>               <br> <span class="hljs-comment">-- 需求：2.统计班级各个学员的成绩（表score：字段id,name,math,english,chinese)，展示规则如下： (&gt;=85,展示优秀；&gt;=60,展示及格；否则展示不及格）</span><br>   <span class="hljs-keyword">Select</span> <br>name,<br>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> math<span class="hljs-operator">&gt;=</span><span class="hljs-number">85</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;优秀&#x27;</span> <span class="hljs-keyword">when</span> math<span class="hljs-operator">&gt;=</span><span class="hljs-number">60</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;及格&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;不及格&#x27;</span><span class="hljs-keyword">end</span>)<span class="hljs-string">&#x27; 数学&#x27;</span>,<br>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> english<span class="hljs-operator">&gt;=</span><span class="hljs-number">85</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;优秀&#x27;</span> <span class="hljs-keyword">when</span> english<span class="hljs-operator">&gt;=</span><span class="hljs-number">60</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;及格&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;不及格&#x27;</span><span class="hljs-keyword">end</span>)<span class="hljs-string">&#x27; 英语&#x27;</span>,<br>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> chinese<span class="hljs-operator">&gt;=</span><span class="hljs-number">85</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;优秀&#x27;</span> <span class="hljs-keyword">when</span> chinese<span class="hljs-operator">&gt;=</span><span class="hljs-number">60</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;及格&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;不及格&#x27;</span><span class="hljs-keyword">end</span>)<span class="hljs-string">&#x27; 语文&#x27;</span><br><span class="hljs-keyword">from</span> score；<br>                                                               <br></code></pre></td></tr></table></figure><h2 id="四、约束"><a href="#四、约束" class="headerlink" title="四、约束"></a>四、约束</h2><h3 id="一、约束概述及分类"><a href="#一、约束概述及分类" class="headerlink" title="一、约束概述及分类"></a>一、约束概述及分类</h3><h4 id="4-1-概念"><a href="#4-1-概念" class="headerlink" title="4.1 概念"></a>4.1 概念</h4><p>①约束是作用于表中字段上的规则，用于限制存储在表中的数据。<br>②如果存在违反约束的数据行为，行为会被约束终止。<br>③约束可以在创建表时规定（通过 Create table 语句），或者在表创建之后规定（通过 Alter table 语句）。</p><h4 id="4-2-目的"><a href="#4-2-目的" class="headerlink" title="4.2 目的"></a>4.2 目的</h4><p>保证数据库中数据的正确、有效性和完整性。</p><h4 id="4-3-分类"><a href="#4-3-分类" class="headerlink" title="4.3 分类"></a>4.3 分类</h4><table><thead><tr><th>约束</th><th>关键字</th><th>描述</th></tr></thead><tbody><tr><td>非空约束</td><td>NOT NULL</td><td>限制字段的数据不能为 null 值</td></tr><tr><td>唯一约束</td><td>UNIQUE</td><td>保证字段的所有数据唯一、不重复的</td></tr><tr><td>主键约束</td><td>PRIMARY KEY</td><td>Not null 和 Unique 的结合（非空且唯一）。确保某列（或两个列多个列的结合）有唯一的标识，有助于更容易更快速地找到表中的一个特定的记录。</td></tr><tr><td>默认约束</td><td>DEFAULT</td><td>保存数据时，如果未指定该字段的值，则采用默认值</td></tr><tr><td>检查约束</td><td>CHECK</td><td>保证字段值符合指定条件</td></tr><tr><td>外键约束</td><td>FOREIGN KEY</td><td>用来让两张表的数据之间建立连接，保证数据的一致性和完整性</td></tr></tbody></table><p>注意：<br>检查约束适用于MYSQL的8.0.16版本之后。</p><h4 id="4-4-案例"><a href="#4-4-案例" class="headerlink" title="4.4 案例"></a>4.4 案例</h4><table><thead><tr><th>字段名</th><th>字段含义</th><th>字段类型</th><th>约束条件</th><th>约束关键字</th></tr></thead><tbody><tr><td>ID</td><td>ID唯一标识</td><td>int</td><td>主键并且自动增长</td><td>PRIMARY KEY,AUTO_INCREMENT</td></tr><tr><td>Name</td><td>姓名</td><td>varchar(10)</td><td>非空，且唯一</td><td>NOT NULL,UNIQUE</td></tr><tr><td>Age</td><td>年龄</td><td>int</td><td>大于0，并且小于等于120</td><td>CHECK</td></tr><tr><td>Stauts</td><td>状态</td><td>char(1)</td><td>如果没有指定该值，默认为 1</td><td>DEFAULT</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">user</span>(<br>   id <span class="hljs-type">int</span> <span class="hljs-keyword">primary</span> key auto_increment comment <span class="hljs-string">&#x27;主键&#x27;</span>,<br>   name <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">unique</span> comment <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>   age <span class="hljs-type">int</span> <span class="hljs-keyword">check</span>(age<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <span class="hljs-keyword">and</span> age<span class="hljs-operator">&lt;=</span><span class="hljs-number">120</span>) comment <span class="hljs-string">&#x27;年龄&#x27;</span>,<br>   stauts <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;1&#x27;</span> comment <span class="hljs-string">&#x27;状态&#x27;</span><br>)comment <span class="hljs-string">&#x27;用户表&#x27;</span>;<br><br></code></pre></td></tr></table></figure><h3 id="二、外键约束"><a href="#二、外键约束" class="headerlink" title="二、外键约束"></a>二、外键约束</h3><h4 id="4-1-概念-1"><a href="#4-1-概念-1" class="headerlink" title="4.1 概念"></a>4.1 概念</h4><p>外键用来让两张表的数据之间建立连接，从而保证数据的一致性和完整性。<br>主表（父表）：一方，用来约束其他表；<br>从表（子表）：多方，被别人约束的表；必具有外键，且外键列数据为引用主表数据。</p><h4 id="4-2-语法"><a href="#4-2-语法" class="headerlink" title="4.2 语法"></a>4.2 语法</h4><p>添加外键</p><p>方式1——创建表时</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">table</span> 表名(<br>          字段 数据类型，<br>          ...<br>          [<span class="hljs-keyword">Constraint</span>] [外键名称] <span class="hljs-keyword">Foreign</span> key (外键字段) <span class="hljs-keyword">References</span> 主表(主表列名)<br>);<br></code></pre></td></tr></table></figure><p>方式2——添加修改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> <span class="hljs-keyword">Constraint</span> 外键名称 <span class="hljs-keyword">Foreign</span> key (外键字段)<span class="hljs-keyword">References</span> 主表(主表列名)；<br></code></pre></td></tr></table></figure><p>删除外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">drop</span> <span class="hljs-keyword">Foreign</span> key 外键名称;<br></code></pre></td></tr></table></figure><h3 id="三、外键约束时的删除-x2F-更新规则-update-x2F-delete-rules"><a href="#三、外键约束时的删除-x2F-更新规则-update-x2F-delete-rules" class="headerlink" title="三、外键约束时的删除&#x2F;更新规则(update&#x2F;delete rules)"></a>三、外键约束时的删除&#x2F;更新规则(update&#x2F;delete rules)</h3><p>​<strong>行为分类与说明</strong></p><table><thead><tr><th>行为分类</th><th>说明</th></tr></thead><tbody><tr><td>NO ACTION</td><td>主表（父表）中删除&#x2F;更新记录时，先检查该记录是否有对应外键，如果有则不允许删除&#x2F;更新</td></tr><tr><td>RESRICT</td><td>与 NO ACTION 一致</td></tr><tr><td>CASCADE</td><td>主表（父表）中删除&#x2F;更新记录时，先检查该记录是否有对应外键，如果有，则也删除&#x2F;更新外键在子表中的记录</td></tr><tr><td>SET NULL</td><td>主表（父表）中删除对应记录时，先检查该记录是否有对应外键，如果有则设置子表中该外键值为NULL（前提：外键允许取NULL值）</td></tr><tr><td>SET DEFAULT</td><td>主表（父表）有变更时，子表将外键列设置成一个默认的值（Inoodb不支持）</td></tr></tbody></table><ul><li><strong>语法</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 外键名称 <span class="hljs-keyword">Foreign</span> key (外键字段）<span class="hljs-keyword">References</span> 主表（主表字段名）<span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> 行为分类 <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> 行为分类；                                                       <br></code></pre></td></tr></table></figure><p>​</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs sql"># eg<br># <span class="hljs-comment">-------------------外键约束-------------------------</span><br><span class="hljs-comment">-- 准备数据</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> dept(<br>    id <span class="hljs-type">int</span> auto_increment comment <span class="hljs-string">&#x27;ID&#x27;</span> <span class="hljs-keyword">primary</span> key,<br>    name <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;部门名称&#x27;</span><br>) comment <span class="hljs-string">&#x27;部门表&#x27;</span>;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span>  dept (id, name)<span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;研发部&#x27;</span>),(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;市场部&#x27;</span>),(<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;财务部&#x27;</span>),(<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;销售部&#x27;</span>),(<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;总经办&#x27;</span>);<br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span>  emp(<br>    id <span class="hljs-type">int</span> auto_increment comment <span class="hljs-string">&#x27;ID&#x27;</span> <span class="hljs-keyword">primary</span> key,<br>    name <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;名字&#x27;</span>,<br>    age <span class="hljs-type">int</span> comment <span class="hljs-string">&#x27;年龄&#x27;</span>,<br>    job <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) comment <span class="hljs-string">&#x27;职位&#x27;</span>,<br>    salary <span class="hljs-type">int</span> comment <span class="hljs-string">&#x27;薪资&#x27;</span>,<br>    entry <span class="hljs-type">date</span> comment <span class="hljs-string">&#x27;入职时间&#x27;</span>,<br>    managerid  <span class="hljs-type">int</span> comment <span class="hljs-string">&#x27;直系领导ID&#x27;</span>,<br>    dept_id <span class="hljs-type">int</span> comment  <span class="hljs-string">&#x27;部门ID&#x27;</span><br>) comment <span class="hljs-string">&#x27;员工表&#x27;</span>;<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> emp (id,name,age,job,salary,entry,managerid,dept_id)<span class="hljs-keyword">values</span><br>    (<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;小明&#x27;</span>,<span class="hljs-number">22</span>,<span class="hljs-string">&#x27;销售&#x27;</span>,<span class="hljs-number">4000</span>,<span class="hljs-string">&#x27;2020-10-10&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<br>    (<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;小张&#x27;</span>,<span class="hljs-number">21</span>,<span class="hljs-string">&#x27;运维&#x27;</span>,<span class="hljs-number">6000</span>,<span class="hljs-string">&#x27;2020-10-10&#x27;</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>),<br>    (<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;小刘&#x27;</span>,<span class="hljs-number">19</span>,<span class="hljs-string">&#x27;售后&#x27;</span>,<span class="hljs-number">5000</span>,<span class="hljs-string">&#x27;2020-10-10&#x27;</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>),<br>    (<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;小高&#x27;</span>,<span class="hljs-number">32</span>,<span class="hljs-string">&#x27;助理&#x27;</span>,<span class="hljs-number">9000</span>,<span class="hljs-string">&#x27;2020-10-10&#x27;</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>),<br>    (<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;小龙&#x27;</span>,<span class="hljs-number">20</span>,<span class="hljs-string">&#x27;开发&#x27;</span>,<span class="hljs-number">5000</span>,<span class="hljs-string">&#x27;2020-10-10&#x27;</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>);<br><br><span class="hljs-comment">-- 添加外键</span><br>    <span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> fk_emp_dept_id <span class="hljs-keyword">foreign</span> key (dept_id) <span class="hljs-keyword">references</span> dept(id);<br><span class="hljs-comment">-- 删除外键</span><br>    <span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">drop</span> <span class="hljs-keyword">foreign</span> key fk_emp_dept_id;<br><br><span class="hljs-comment">-- 外键的删除和更新行为</span><br>    <span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> fk_emp_dept_id <span class="hljs-keyword">foreign</span> key (dept_id) <span class="hljs-keyword">references</span> dept(id)<br>        <span class="hljs-keyword">on</span> <span class="hljs-keyword">UPDATE</span>  cascade  <span class="hljs-keyword">on</span> <span class="hljs-keyword">DELETE</span> cascade ;<br><br></code></pre></td></tr></table></figure><h2 id="五、多表查询"><a href="#五、多表查询" class="headerlink" title="五、多表查询"></a>五、多表查询</h2><p>我们之前在讲解SQL语句的时候，讲解了DQL语句，也就是数据查询语句，但是之前讲解的查询都是单 表查询，而本章节我们要学习的则是多表查询操作，主要从以下几个方面进行讲解。</p><h3 id="5-1多表关系"><a href="#5-1多表关系" class="headerlink" title="5.1多表关系"></a>5.1多表关系</h3><p>项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结 构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：</p><ul><li>一对多(多对一)</li><li>多对多</li><li>一对一</li></ul><h4 id="5-1-1一对多（多对一）"><a href="#5-1-1一对多（多对一）" class="headerlink" title="5.1.1一对多（多对一）"></a>5.1.1一对多（多对一）</h4><ul><li><p>案例: 部门 与 员工的关系 </p></li><li><p>关系: 一个部门对应多个员工，一个员工对应一个部门 </p></li><li><p>实现: 在多的一方建立外键，指向一的一方的主键</p></li></ul><p><img src="/../imgs/first/%E4%B8%80%E5%AF%B9%E5%A4%9A_2023-04-04_09-41-05-16835317446169.png" alt="一对多"></p><h4 id="5-1-2-多对多"><a href="#5-1-2-多对多" class="headerlink" title="5.1.2 多对多"></a>5.1.2 多对多</h4><ul><li><p>案例: 学生 与 课程的关系</p></li><li><p>关系: 一个学生可以选修多门课程，一门课程也可以供多个学生选择</p></li><li><p>实现: 建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p><p><img src="/../imgs/first/%E5%A4%9A%E5%AF%B9%E5%A4%9A_2023-04-04_09-46-24-168353177464311.png" alt="多对多"></p></li></ul><p>对应sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- -----------------------多表关系演示--------------------------</span><br><br><span class="hljs-comment">--  多对多</span><br><span class="hljs-keyword">create</span>  <span class="hljs-keyword">table</span> Students(<br>    id <span class="hljs-type">int</span> auto_increment <span class="hljs-keyword">primary</span> key comment <span class="hljs-string">&#x27;主键ID&#x27;</span>,<br>    name <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) comment <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>    <span class="hljs-keyword">no</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) comment <span class="hljs-string">&#x27;学号&#x27;</span><br>)comment <span class="hljs-string">&#x27;学生表&#x27;</span>;<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Students <span class="hljs-keyword">values</span> (<span class="hljs-keyword">null</span>, <span class="hljs-string">&#x27;黛绮丝&#x27;</span>, <span class="hljs-string">&#x27;2000100101&#x27;</span>),(<span class="hljs-keyword">null</span>, <span class="hljs-string">&#x27;谢逊&#x27;</span>,<br>                             <span class="hljs-string">&#x27;2000100102&#x27;</span>),(<span class="hljs-keyword">null</span>, <span class="hljs-string">&#x27;殷天正&#x27;</span>, <span class="hljs-string">&#x27;2000100103&#x27;</span>),(<span class="hljs-keyword">null</span>, <span class="hljs-string">&#x27;韦一笑&#x27;</span>, <span class="hljs-string">&#x27;2000100104&#x27;</span>);<br><br><br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> course(<br>     id <span class="hljs-type">int</span> auto_increment <span class="hljs-keyword">primary</span> key comment <span class="hljs-string">&#x27;主键ID&#x27;</span>,<br>     name <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) comment <span class="hljs-string">&#x27;课程名称&#x27;</span><br>) comment <span class="hljs-string">&#x27;课程表&#x27;</span>;<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> course <span class="hljs-keyword">values</span> (<span class="hljs-keyword">null</span>, <span class="hljs-string">&#x27;Java&#x27;</span>), (<span class="hljs-keyword">null</span>, <span class="hljs-string">&#x27;PHP&#x27;</span>), (<span class="hljs-keyword">null</span> , <span class="hljs-string">&#x27;MySQL&#x27;</span>) ,<br>                          (<span class="hljs-keyword">null</span>, <span class="hljs-string">&#x27;Hadoop&#x27;</span>);<br><br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> student_course(id <span class="hljs-type">int</span> auto_increment comment <span class="hljs-string">&#x27;主键&#x27;</span> <span class="hljs-keyword">primary</span> key,<br>     studentid <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;学生ID&#x27;</span>,<br>     courseid <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;课程ID&#x27;</span>,<br>     <span class="hljs-keyword">constraint</span> fk_courseid <span class="hljs-keyword">foreign</span> key (courseid) <span class="hljs-keyword">references</span> course (id),<br>     <span class="hljs-keyword">constraint</span> fk_studentid <span class="hljs-keyword">foreign</span> key (studentid) <span class="hljs-keyword">references</span> Students(id)<br>)comment <span class="hljs-string">&#x27;学生课程中间表&#x27;</span>;<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> student_course <span class="hljs-keyword">values</span> (<span class="hljs-keyword">null</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),(<span class="hljs-keyword">null</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),(<span class="hljs-keyword">null</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>),(<span class="hljs-keyword">null</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>),<br>                                  (<span class="hljs-keyword">null</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>),(<span class="hljs-keyword">null</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>);<br></code></pre></td></tr></table></figure><h4 id="5-1-3-一对一"><a href="#5-1-3-一对一" class="headerlink" title="5.1.3 一对一"></a>5.1.3 一对一</h4><p>案例: 用户 与 用户详情的关系</p><p>关系: 一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另 一张表中，以提升操作效率</p><p>实现: 在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的(UNIQUE)</p><p><img src="/../imgs/first/%E4%B8%80%E5%AF%B9%E4%B8%80_2023-04-04_10-10-27-168353188881213.png" alt="一对一"></p><p>sql代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ----------------- 一对一演示 --------------------</span><br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> tb_user(<br>    id <span class="hljs-type">int</span> auto_increment <span class="hljs-keyword">primary</span> key comment <span class="hljs-string">&#x27;主键ID&#x27;</span>,<br>    name <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) comment <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>    age <span class="hljs-type">int</span> comment <span class="hljs-string">&#x27;年龄&#x27;</span>,<br>    gender <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) comment <span class="hljs-string">&#x27;1: 男 , 2: 女&#x27;</span>,<br>    phone <span class="hljs-type">char</span>(<span class="hljs-number">11</span>) comment <span class="hljs-string">&#x27;手机号&#x27;</span><br>) comment <span class="hljs-string">&#x27;用户基本信息表&#x27;</span>;<br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> tb_user_edu(<br>    id <span class="hljs-type">int</span> auto_increment <span class="hljs-keyword">primary</span> key comment <span class="hljs-string">&#x27;主键ID&#x27;</span>,<br>    degree <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) comment <span class="hljs-string">&#x27;学历&#x27;</span>,<br>    major <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) comment <span class="hljs-string">&#x27;专业&#x27;</span>,<br>    primaryschool <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) comment <span class="hljs-string">&#x27;小学&#x27;</span>,<br>    middleschool <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) comment <span class="hljs-string">&#x27;中学&#x27;</span>,<br>    university <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) comment <span class="hljs-string">&#x27;大学&#x27;</span>,<br>    userid <span class="hljs-type">int</span> <span class="hljs-keyword">unique</span> comment <span class="hljs-string">&#x27;用户ID&#x27;</span>,<br>    <span class="hljs-keyword">constraint</span> fk_userid <span class="hljs-keyword">foreign</span> key (userid) <span class="hljs-keyword">references</span> tb_user(id)<br>) comment <span class="hljs-string">&#x27;用户教育信息表&#x27;</span>;<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> tb_user(id, name, age, gender, phone) <span class="hljs-keyword">values</span><br>    (<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;黄渤&#x27;</span>,<span class="hljs-number">45</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;18800001111&#x27;</span>),<br>    (<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;冰冰&#x27;</span>,<span class="hljs-number">35</span>,<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;18800002222&#x27;</span>),<br>    (<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;码云&#x27;</span>,<span class="hljs-number">55</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;18800008888&#x27;</span>),<br>    (<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;李彦宏&#x27;</span>,<span class="hljs-number">50</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;18800009999&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> tb_user_edu(id, degree, major, primaryschool, middleschool,university, userid) <span class="hljs-keyword">values</span><br>    (<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;本科&#x27;</span>,<span class="hljs-string">&#x27;舞蹈&#x27;</span>,<span class="hljs-string">&#x27;静安区第一小学&#x27;</span>,<span class="hljs-string">&#x27;静安区第一中学&#x27;</span>,<span class="hljs-string">&#x27;北京舞蹈学院&#x27;</span>,<span class="hljs-number">1</span>),<br>    (<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;硕士&#x27;</span>,<span class="hljs-string">&#x27;表演&#x27;</span>,<span class="hljs-string">&#x27;朝阳区第一小学&#x27;</span>,<span class="hljs-string">&#x27;朝阳区第一中学&#x27;</span>,<span class="hljs-string">&#x27;北京电影学院&#x27;</span>,<span class="hljs-number">2</span>),<br>    (<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;本科&#x27;</span>,<span class="hljs-string">&#x27;英语&#x27;</span>,<span class="hljs-string">&#x27;杭州市第一小学&#x27;</span>,<span class="hljs-string">&#x27;杭州市第一中学&#x27;</span>,<span class="hljs-string">&#x27;杭州师范大学&#x27;</span>,<span class="hljs-number">3</span>),<br>    (<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;本科&#x27;</span>,<span class="hljs-string">&#x27;应用数学&#x27;</span>,<span class="hljs-string">&#x27;阳泉第一小学&#x27;</span>,<span class="hljs-string">&#x27;阳泉区第一中学&#x27;</span>,<span class="hljs-string">&#x27;清华大学&#x27;</span>,<span class="hljs-number">4</span>);<br></code></pre></td></tr></table></figure><h3 id="5-2多表查询概述"><a href="#5-2多表查询概述" class="headerlink" title="5.2多表查询概述"></a>5.2多表查询概述</h3><p>多表查询就是指从多张表中查询数据。</p><p>原来查询单表数据，执行的SQL形式为：select * from emp; 那么我们要执行多表查询，就</p><p><img src="/../imgs/first/%E6%A6%82%E8%BF%B01Snipaste_2023-04-04_10-52-16-168353193672015.png" alt="概述1"></p><p>此时,我们看到查询结果中结果集，总共5条记录，而这其实就是员工表emp所有的记录。</p><p>只需要使用逗号分隔多张表即可，如： select * from emp , dept ; 具体的执行结果如下:</p><p><img src="/../imgs/first/%E6%A6%82%E8%BF%B02Snipaste_2023-04-04_10-54-13-168353197446917.png" alt="概述2"></p><p>这个表员工表emp所有的记录  与 部门表dept所有记录(6) 的所有组合情况，这种现象称之为笛卡尔积。接下来，就来简单 介绍下笛卡尔积。</p><p>笛卡尔积: 笛卡尔乘积是指在数学中，两个集合A集合 和 B集合的所有组合情况。</p><p><img src="/../imgs/first/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF1_2023-04-04_10-56-07-168353200156219.png" alt="笛卡尔积1"></p><p>而在多表查询中，我们是需要消除无效的笛卡尔积的，只保留两张表关联部分的数据。</p><p><img src="/../imgs/first/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF2_2023-04-04_10-56-54-168353202875221.png" alt="笛卡尔2"></p><p><img src="/../imgs/first/%E6%B6%88%E9%99%A4%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF_2023-04-04_10-58-51-168353208465423.png" alt="消除"></p><p>在SQL语句中，如何来去除无效的笛卡尔积呢？ 我们可以给多表查询加上连接查询的条件即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp , dept <span class="hljs-keyword">where</span> emp.dept_id <span class="hljs-operator">=</span> dept.id;<br></code></pre></td></tr></table></figure><p><img src="/../imgs/first/%E6%B6%88%E9%99%A4%E5%90%8E_2023-04-04_11-00-02-168353209774025.png" alt="消除后"></p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li>连接查询<ul><li>内连接 ：相当于查询A、B交集部分数据</li><li>外连接：分为左外连接和右外连接</li><li>左外连接：查询左表所有数据，以及两张表交集部分数据</li><li>右外连接：查询右表所有数据，以及两张表交集部分数据</li><li>自连接：当前表与自身的连接查询，自连接必须使用表别名</li></ul></li></ul><h3 id="5-3内连接"><a href="#5-3内连接" class="headerlink" title="5.3内连接"></a>5.3内连接</h3><p><img src="/../imgs/first/%E5%86%85%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2_2023-04-04_11-16-11-168353212220027.png" alt="内连接查询"></p><p>内连接的语法分为两种: 隐式内连接、显式内连接。先来学习一下具体的语法结构。</p><h4 id="1-隐式内连接"><a href="#1-隐式内连接" class="headerlink" title="1). 隐式内连接"></a>1). 隐式内连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> 字段列表 <span class="hljs-keyword">FROM</span> 表<span class="hljs-number">1</span> , 表<span class="hljs-number">2</span> <span class="hljs-keyword">WHERE</span> 条件 ... ;<br></code></pre></td></tr></table></figure><h4 id="2-显式内连接"><a href="#2-显式内连接" class="headerlink" title="2). 显式内连接"></a>2). 显式内连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> 字段列表 <span class="hljs-keyword">FROM</span> 表<span class="hljs-number">1</span> [ <span class="hljs-keyword">INNER</span> ] <span class="hljs-keyword">JOIN</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">ON</span> 连接条件 ... ;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"># eg<br><span class="hljs-comment">-- 内连接演示</span><br><br><span class="hljs-comment">-- 1.查询每一个员工的姓名，及关联的部门的名称（隐式内连接实现）</span><br> <span class="hljs-comment">-- 表结构 emp , dept</span><br> <span class="hljs-comment">-- 连接条件 emp.dept.id = dept.id</span><br>        <span class="hljs-keyword">select</span> emp.name,dept.name <span class="hljs-keyword">from</span> emp,dept <span class="hljs-keyword">where</span> emp.dept_id<span class="hljs-operator">=</span>dept_id;<br><br><span class="hljs-comment">-- 2.查询每一个员工的姓名，及关联的部门的名称（显式内连接完成） -- inner join ... on...</span><br> <span class="hljs-comment">-- 表结构 emp , dept</span><br> <span class="hljs-comment">-- 连接条件 emp.dept.id = dept.id</span><br>       <span class="hljs-keyword">select</span>  emp.name,dept.name <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> dept <span class="hljs-keyword">on</span> emp.dept_id <span class="hljs-operator">=</span> dept.id;<br></code></pre></td></tr></table></figure><h3 id="5-4外连接"><a href="#5-4外连接" class="headerlink" title="5.4外连接"></a>5.4外连接</h3><p><img src="/../imgs/first/%E5%A4%96%E8%BF%9E%E6%8E%A5_2023-04-04_14-12-19-168353213634729.png" alt="外连接"></p><p>外连接分为两种，分别是：左外连接 和 右外连接。具体的语法结构为：</p><h4 id="1）左外连接"><a href="#1）左外连接" class="headerlink" title="1）左外连接"></a>1）左外连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> 字段列表 <span class="hljs-keyword">FROM</span> 表<span class="hljs-number">1</span> <span class="hljs-keyword">LEFT</span> [ <span class="hljs-keyword">OUTER</span> ] <span class="hljs-keyword">JOIN</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">ON</span> 条件 ... ;<br></code></pre></td></tr></table></figure><p>左外连接相当于查询表1(左表)的所有数据，当然也包含表1和表2交集部分的数据。</p><h4 id="2）右外连接"><a href="#2）右外连接" class="headerlink" title="2）右外连接"></a>2）右外连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> 字段列表 <span class="hljs-keyword">FROM</span> 表<span class="hljs-number">1</span> <span class="hljs-keyword">RIGHT</span> [ <span class="hljs-keyword">OUTER</span> ] <span class="hljs-keyword">JOIN</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">ON</span> 条件 ... ;<br></code></pre></td></tr></table></figure><p>右外连接相当于查询表2(右表)的所有数据，当然也包含表1和表2交集部分的数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs SQL">案例:<br>A. 查询emp表的所有数据, 和对应的部门信息<br><span class="hljs-comment">-- 外连接演示</span><br> <span class="hljs-comment">-- 1.查询emp表的所有数据，和对应的部门信息（左外连接）</span><br> <span class="hljs-comment">-- 表结构 emp , dept</span><br> <span class="hljs-comment">-- 连接条件 emp.dept.id = dept.id</span><br>    <span class="hljs-keyword">select</span> e.<span class="hljs-operator">*</span>,d.name <span class="hljs-keyword">from</span> emp e <span class="hljs-keyword">left</span> <span class="hljs-keyword">outer</span> <span class="hljs-keyword">join</span> dept d <span class="hljs-keyword">on</span> e.dept_id <span class="hljs-operator">=</span> d.id;<br><br> <span class="hljs-comment">-- 2.查询dept表的所有数据，和对应的员工信息（右外连接）</span><br>    <span class="hljs-keyword">select</span> d.<span class="hljs-operator">*</span>,e.<span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp e <span class="hljs-keyword">right</span> <span class="hljs-keyword">outer</span> <span class="hljs-keyword">join</span> dept d <span class="hljs-keyword">on</span> e.dept_id <span class="hljs-operator">=</span> d.id;<br>    <br>    <br>    <br>    注意事项：<br>左外连接和右外连接是可以相互替换的，只需要调整在连接查询时<span class="hljs-keyword">SQL</span>中，表结构的先后顺<br>序就可以了。而我们在日常开发使用时，更偏向于左外连接。<br><br></code></pre></td></tr></table></figure><h3 id="5-5自连接"><a href="#5-5自连接" class="headerlink" title="5.5自连接"></a>5.5自连接</h3><h4 id="5-5-1自连接查询"><a href="#5-5-1自连接查询" class="headerlink" title="5.5.1自连接查询"></a>5.5.1自连接查询</h4><p>顾名思义，就是自己连接自己，也就是把一张表连接查询多次。</p><p>自连接 的查询语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> 字段列表 <span class="hljs-keyword">FROM</span> 表A 别名A <span class="hljs-keyword">JOIN</span> 表A 别名B <span class="hljs-keyword">ON</span> 条件 ... ;<br></code></pre></td></tr></table></figure><p>而对于自连接查询，可以是内连接查询，也可以是外连接查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 自连接</span><br> <span class="hljs-comment">-- 1.查询员工 及其 所属领导的名字</span><br> <span class="hljs-comment">-- 表结构 emp</span><br>    <span class="hljs-keyword">select</span> a.name,b.name <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">as</span> a ,emp  <span class="hljs-keyword">as</span> b <span class="hljs-keyword">where</span> a.managerid<span class="hljs-operator">=</span>b.id;<br><br> <span class="hljs-comment">-- 2.查询所有员工 emp 及其领导的名字 emp , 如果员工没有领导, 也需要查询出来</span><br> <span class="hljs-comment">-- 表结构: emp a , emp b</span><br>    <span class="hljs-keyword">select</span> a.name <span class="hljs-string">&#x27;员工&#x27;</span>,b.name <span class="hljs-string">&#x27;领导&#x27;</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">as</span> a <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> emp <span class="hljs-keyword">as</span> b <span class="hljs-keyword">on</span> a.managerid <span class="hljs-operator">=</span> b.id;<br>    <br>    注意事项:<br>在自连接查询中，必须要为表起别名，要不然我们不清楚所指定的条件、返回的字段，到底<br>是哪一张表的字段。<br><br></code></pre></td></tr></table></figure><h4 id="5-5-2联合查询"><a href="#5-5-2联合查询" class="headerlink" title="5.5.2联合查询"></a>5.5.2联合查询</h4><p>对于union查询，就是把多次查询的结果合并起来，形成一个新的查询结果集。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> 字段列表 <span class="hljs-keyword">FROM</span> 表A ... <br><br><span class="hljs-keyword">UNION</span> [ <span class="hljs-keyword">ALL</span> ] <br><br><span class="hljs-keyword">SELECT</span> 字段列表 <span class="hljs-keyword">FROM</span> 表B ....;<br></code></pre></td></tr></table></figure><ul><li><p>对于联合查询的多张表的列数必须保持一致，字段类型也需要保持一致。</p></li><li><p>union all 会将全部的数据直接合并在一起，union 会对合并之后的数据去重。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 联合查询</span><br>  <span class="hljs-comment">--  1.将薪资低于 5000 的员工 , 和 年龄大于 23岁的员工全部查询出来.</span><br>  <br> # <span class="hljs-keyword">union</span> <span class="hljs-keyword">all</span> 查询查询出来的结果，仅仅进行简单的合并，并未去重。<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> salary<span class="hljs-operator">&gt;</span><span class="hljs-number">5000</span><br><span class="hljs-keyword">union</span> <span class="hljs-keyword">all</span><br><span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> age<span class="hljs-operator">&gt;</span><span class="hljs-number">23</span>;<br><br> #<span class="hljs-keyword">union</span> 联合查询，会对查询出来的结果进行去重处理。<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> salary<span class="hljs-operator">&gt;</span><span class="hljs-number">5000</span><br><span class="hljs-keyword">union</span><br><span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> age<span class="hljs-operator">&gt;</span><span class="hljs-number">23</span>;<br></code></pre></td></tr></table></figure><p>注意： 如果多条查询语句查询出来的结果，字段数量不一致，在进行union&#x2F;union all联合查询时，将会报 错。如：</p><p><img src="/../imgs/first/%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E5%A4%9A%E8%A1%A8%E5%AD%97%E6%AE%B5%E5%BF%85%E9%A1%BB%E4%B8%80%E8%87%B4_2023-04-04_16-35-45-168353215414131.png" alt="必须一致"></p><h3 id="5-6子查询"><a href="#5-6子查询" class="headerlink" title="5.6子查询"></a>5.6子查询</h3><h4 id="5-6-1概述"><a href="#5-6-1概述" class="headerlink" title="5.6.1概述"></a>5.6.1概述</h4><h4 id="1-概念"><a href="#1-概念" class="headerlink" title="1). 概念"></a>1). 概念</h4><p> SQL语句中嵌套SELECT语句，称为<strong>嵌套查询</strong>，又称<strong>子查询</strong>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> t1 <span class="hljs-keyword">WHERE</span> column1 <span class="hljs-operator">=</span> ( <span class="hljs-keyword">SELECT</span> column1 <span class="hljs-keyword">FROM</span> t2 );<br></code></pre></td></tr></table></figure><p>子查询外部的语句可以是INSERT &#x2F; UPDATE &#x2F; DELETE &#x2F; SELECT 的任何一个。</p><h4 id="2-分类"><a href="#2-分类" class="headerlink" title="2).分类"></a>2).分类</h4><ul><li><p>标量子查询（子查询结果为单个值） </p></li><li><p>列子查询(子查询结果为一列) </p></li><li><p>行子查询(子查询结果为一行) </p></li><li><p>表子查询(子查询结果为多行多列)</p></li></ul><p>​    根据子查询位置，分为：</p><ul><li><p>WHERE之后 </p></li><li><p>FROM之后 </p></li><li><p>SELECT之后</p></li></ul><h4 id="5-6-2标量子查询"><a href="#5-6-2标量子查询" class="headerlink" title="5.6.2标量子查询"></a>5.6.2标量子查询</h4><p>子查询返回的结果是单个值（数字、字符串、日期等），最简单的形式，这种子查询称为标量子查询。</p><p> 常用的操作符：&#x3D; &lt;&gt; &gt; &gt;&#x3D; &lt; &lt;&#x3D; </p><p>案例:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ----------- 子查询 ---------------</span><br><span class="hljs-comment">-- 标量子查询</span><br> <span class="hljs-comment">-- 1.查询 &quot;销售部&quot; 的所有员工信息</span><br>   <span class="hljs-comment">-- a 查询&quot;销售部&quot;的所有员工信息</span><br>   <span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;销售部&#x27;</span>;<br><br>   <span class="hljs-comment">-- b 根据销售部id ,查询员工信息</span><br>    <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> dept_id<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;销售部&#x27;</span>);<br> <span class="hljs-comment">-- 2.查询在 &quot;小明&quot; 入职之后的员工信息</span><br>  <span class="hljs-comment">-- a 查询 小白的入职日期</span><br>    <span class="hljs-keyword">select</span>  entry <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span>  name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;小明&#x27;</span>;<br>  <span class="hljs-comment">-- b 查询指定入职日期之后入职的员工信息</span><br>    <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> entry <span class="hljs-operator">&gt;</span> ( <span class="hljs-keyword">select</span>  entry <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span>  name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;小明&#x27;</span>);<br><br></code></pre></td></tr></table></figure><h4 id="5-6-3列子查询"><a href="#5-6-3列子查询" class="headerlink" title="5.6.3列子查询"></a>5.6.3列子查询</h4><p>子查询返回的结果是一列（可以是多行），这种子查询称为列子查询。</p><p>常用的操作符：IN 、NOT IN 、 ANY 、SOME 、 ALL</p><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>IN</td><td>在指定的集合范围之内，多选一</td></tr><tr><td>NOT IN</td><td>不在指定的集合范围之内</td></tr><tr><td>ANY</td><td>子查询返回列表中，有任意一个满足即可</td></tr><tr><td>SOME</td><td>与ANY等同，使用SOME的地方都可以使用ANY</td></tr><tr><td>ALL</td><td>子查询返回列表的所有值都必须满足</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs sql">案例<br><span class="hljs-comment">-- 列子查询演示 --</span><br> <span class="hljs-comment">-- 1.查询 &quot;销售部&quot; 和 &quot;市场部&quot; 的所有员工信息</span><br>   <span class="hljs-comment">-- 分解两步</span><br>     <span class="hljs-comment">-- a.查询销售部和市场部的 部门id</span><br>     <span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;销售部&#x27;</span> <span class="hljs-keyword">or</span> name <span class="hljs-operator">=</span><span class="hljs-string">&#x27;市场部&#x27;</span>;<br><br>     <span class="hljs-comment">-- b.根据部门id 查询员工信息</span><br>     <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> dept_id <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;销售部&#x27;</span> <span class="hljs-keyword">or</span> name <span class="hljs-operator">=</span><span class="hljs-string">&#x27;市场部&#x27;</span>);<br> <span class="hljs-comment">-- 2.查询比 财务部 所有人工资都高的员工信息</span><br>   <span class="hljs-comment">-- 分解两步</span><br>    <span class="hljs-comment">-- a.查询所有 财务部 人员工资</span><br>     <span class="hljs-keyword">select</span>  id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;财务部&#x27;</span>;<br>     <span class="hljs-keyword">select</span>  salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> dept_id <span class="hljs-operator">=</span> ( <span class="hljs-keyword">select</span>  id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;财务部&#x27;</span>);<br><br><br>    <span class="hljs-comment">-- b.比财务部 所有人工资都高的员工信息</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> salary <span class="hljs-operator">&gt;</span> <span class="hljs-keyword">some</span> ( <span class="hljs-keyword">select</span>  salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> dept_id <span class="hljs-operator">=</span> ( <span class="hljs-keyword">select</span>  id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;财务部&#x27;</span>) );<br><br><br> <span class="hljs-comment">-- 3.查询比 财务部 所有人工资都高的员工信息</span><br>  <span class="hljs-comment">-- 分解两步</span><br>   <span class="hljs-comment">-- a.查询研发部所有人工资</span><br>     <span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;研发部&#x27;</span>;<br>     <span class="hljs-keyword">select</span>  salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> dept_id <span class="hljs-operator">=</span> (<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;研发部&#x27;</span>);<br><br><br>   <span class="hljs-comment">-- b.比研发部所有人工资都高的员工信息</span><br>   <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> salary <span class="hljs-operator">&gt;</span>  <span class="hljs-keyword">any</span> ( <span class="hljs-keyword">select</span>  salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> dept_id <span class="hljs-operator">=</span> (<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> dept <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;研发部&#x27;</span>));<br></code></pre></td></tr></table></figure><h4 id="5-6-4行子查询"><a href="#5-6-4行子查询" class="headerlink" title="5.6.4行子查询"></a>5.6.4行子查询</h4><p>子查询返回的结果是一行（可以是多列），这种子查询称为行子查询。 </p><p>常用的操作符：&#x3D; 、&lt;&gt; 、IN 、NOT IN</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">案例<br><span class="hljs-comment">-- 行子查询 --</span><br># 查询 &quot;张无忌&quot; 的薪资及直属领导<br>  <span class="hljs-comment">-- a.查询 张无忌 的信息 和 直属领导</span><br>  <span class="hljs-keyword">select</span> salary,managerid <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;张无忌&#x27;</span>;<br>  <span class="hljs-comment">-- b.查询张无忌的薪资及直属领导相同的员工信息</span><br>  <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> salary<span class="hljs-operator">=</span><span class="hljs-string">&#x27;12500&#x27;</span> <span class="hljs-keyword">and</span> managerid <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;1&#x27;</span>;<br>  <span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> (salary,managerid)<span class="hljs-operator">=</span>(<span class="hljs-number">12500</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">-- 优化</span><br>  <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> (salary,managerid)<span class="hljs-operator">=</span>( <span class="hljs-keyword">select</span> salary,managerid <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;张无忌&#x27;</span>); <span class="hljs-comment">-- 一行多列</span><br></code></pre></td></tr></table></figure><h4 id="5-6-5表子查询"><a href="#5-6-5表子查询" class="headerlink" title="5.6.5表子查询"></a>5.6.5表子查询</h4><p>子查询返回的结果是多行多列，这种子查询称为表子查询。 </p><p>常用的操作符：IN</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql">案例<br><br><span class="hljs-comment">-- 表子查询 --</span><br>#  查询与 &quot;鹿杖客&quot; , &quot;宋远桥&quot; 的职位和薪资相同的员工信息<br> <span class="hljs-comment">-- a.查询 &quot;鹿杖客&quot; , &quot;宋远桥&quot; 的职位和薪资</span><br><span class="hljs-keyword">select</span> job,salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;鹿杖客&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;宋远桥&#x27;</span>;<br><br> <span class="hljs-comment">-- b.查询与 &quot;鹿杖客&quot; , &quot;宋远桥&quot; 的职位和薪资相同的员工信息</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> (job,salary) <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> job,salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;鹿杖客&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;宋远桥&#x27;</span>);<br><br># 查询入职日期是 &quot;2006-01-01&quot; 之后的员工信息 , 及其部门信息<br> <span class="hljs-comment">-- a.入职日期是2006-01-01之后的员工信息</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> entrydate<span class="hljs-operator">&gt;</span><span class="hljs-string">&#x27;2006-01-01&#x27;</span>;<br> <span class="hljs-comment">-- b.查询这部分员工，对应的部门信息</span><br><span class="hljs-keyword">select</span>  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> entrydate<span class="hljs-operator">&gt;</span><span class="hljs-string">&#x27;2006-01-01&#x27;</span>) <span class="hljs-keyword">as</span> e  <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> dept <span class="hljs-keyword">as</span> d <span class="hljs-keyword">on</span> e.dept_id <span class="hljs-operator">=</span> d.id;<br></code></pre></td></tr></table></figure><h3 id="5-7多表查询案例"><a href="#5-7多表查询案例" class="headerlink" title="5.7多表查询案例"></a>5.7多表查询案例</h3><p>数据环境准备:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> salgrade(<br>grade <span class="hljs-type">int</span>,<br>losal <span class="hljs-type">int</span>,<br>hisal <span class="hljs-type">int</span><br>) comment <span class="hljs-string">&#x27;薪资等级表&#x27;</span>;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> salgrade <span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">3000</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> salgrade <span class="hljs-keyword">values</span> (<span class="hljs-number">2</span>,<span class="hljs-number">3001</span>,<span class="hljs-number">5000</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> salgrade <span class="hljs-keyword">values</span> (<span class="hljs-number">3</span>,<span class="hljs-number">5001</span>,<span class="hljs-number">8000</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> salgrade <span class="hljs-keyword">values</span> (<span class="hljs-number">4</span>,<span class="hljs-number">8001</span>,<span class="hljs-number">10000</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> salgrade <span class="hljs-keyword">values</span> (<span class="hljs-number">5</span>,<span class="hljs-number">10001</span>,<span class="hljs-number">15000</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> salgrade <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>,<span class="hljs-number">15001</span>,<span class="hljs-number">20000</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> salgrade <span class="hljs-keyword">values</span> (<span class="hljs-number">7</span>,<span class="hljs-number">20001</span>,<span class="hljs-number">25000</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> salgrade <span class="hljs-keyword">values</span> (<span class="hljs-number">8</span>,<span class="hljs-number">25001</span>,<span class="hljs-number">30000</span>);<br><br><br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 多表连查练习 --</span><br>#<span class="hljs-number">1.</span>查询员工的姓名、年龄、职位、部门信息 （隐式内连接）<br><span class="hljs-comment">-- 表: emp , dept</span><br><span class="hljs-comment">-- 连接条件: emp.dept_id = dept.id</span><br><span class="hljs-keyword">select</span> e.name,e.age,e.job,d.name <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">as</span> e ,dept d  <span class="hljs-keyword">where</span> e.dept_id<span class="hljs-operator">=</span>d.id;<br><br><br>#<span class="hljs-number">2.</span>查询年龄小于<span class="hljs-number">30</span>岁的员工的姓名、年龄、职位、部门信息（显式内连接）<br><span class="hljs-comment">-- 表: emp , dept</span><br><span class="hljs-comment">-- 连接条件: emp.dept_id = dept.id</span><br><span class="hljs-keyword">select</span> emp.name,emp.age,emp.job,dept.name <span class="hljs-keyword">from</span>  emp <span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> dept <span class="hljs-keyword">on</span>  emp.dept_id <span class="hljs-operator">=</span> dept.id <span class="hljs-keyword">where</span> emp.age<span class="hljs-operator">&lt;</span><span class="hljs-number">30</span>;<br><br><br>#<span class="hljs-number">3.</span>查询拥有员工的部门ID、部门名称<br><span class="hljs-comment">-- 表: emp , dept</span><br><span class="hljs-comment">-- 连接条件: emp.dept_id = dept.id</span><br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> d.id , d.name <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">as</span> e , dept <span class="hljs-keyword">as</span> d <span class="hljs-keyword">where</span> e.dept_id <span class="hljs-operator">=</span> d.id;<br><br><br>#<span class="hljs-number">4.</span>查询所有年龄大于<span class="hljs-number">40</span>岁的员工, 及其归属的部门名称; 如果员工没有分配部门, 也需要展示出来(外连接)<br><span class="hljs-comment">-- 表: emp , dept</span><br><span class="hljs-comment">-- 连接条件: emp.dept_id = dept.id</span><br><span class="hljs-keyword">select</span> e.<span class="hljs-operator">*</span> ,d.name <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">as</span> e   <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span>  dept d <span class="hljs-keyword">on</span> e.dept_id <span class="hljs-operator">=</span> d.id <span class="hljs-keyword">where</span> age<span class="hljs-operator">&gt;</span><span class="hljs-number">40</span>;<br><br><br>#<span class="hljs-number">5.</span> 查询所有员工的工资等级<br><span class="hljs-comment">-- 表: emp , salgrade</span><br><span class="hljs-comment">-- 连接条件 : emp.salary &gt;= salgrade.losal and emp.salary &lt;= salgrade.hisal</span><br><span class="hljs-keyword">select</span> e.<span class="hljs-operator">*</span>,s.grade,s.losal,s.hisal <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">as</span> e ,salgrade s <span class="hljs-keyword">where</span> e.salary <span class="hljs-operator">&gt;=</span> s.losal <span class="hljs-keyword">and</span> e.salary <span class="hljs-operator">&lt;=</span> s.hisal;<br><br><span class="hljs-keyword">select</span> e.<span class="hljs-operator">*</span>,s.grade,s.losal,s.hisal <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">as</span> e ,salgrade s <span class="hljs-keyword">where</span> e.salary <span class="hljs-keyword">between</span> s.losal <span class="hljs-keyword">and</span> s.hisal;<br><br><br>#<span class="hljs-number">6.</span> 查询 &quot;研发部&quot; 所有员工的信息及 工资等级<br><span class="hljs-comment">-- 表: emp , salgrade , dept</span><br><span class="hljs-comment">-- 连接条件 : emp.salary between salgrade.losal and salgrade.hisal ,</span><br><span class="hljs-comment">-- emp.dept_id = dept.id</span><br><span class="hljs-comment">-- 查询条件 : dept.name = &#x27;研发部&#x27;</span><br><span class="hljs-keyword">select</span> e.<span class="hljs-operator">*</span> , s.grade <span class="hljs-keyword">from</span> emp e , dept d , salgrade s <span class="hljs-keyword">where</span> e.dept_id <span class="hljs-operator">=</span> d.id <span class="hljs-keyword">and</span> (<br>    e.salary <span class="hljs-keyword">between</span> s.losal <span class="hljs-keyword">and</span> s.hisal ) <span class="hljs-keyword">and</span> d.name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;研发部&#x27;</span>;<br>#<span class="hljs-number">7.</span> 查询 &quot;研发部&quot; 员工的平均工资<br><span class="hljs-comment">-- 表: emp , dept</span><br><span class="hljs-comment">-- 连接条件 : emp.dept_id = dept.id</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(salary) <span class="hljs-keyword">from</span> emp e ,dept d <span class="hljs-keyword">where</span> e.dept_id <span class="hljs-operator">=</span> d.id <span class="hljs-keyword">and</span> d.name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;研发部&#x27;</span>;<br><br>#<span class="hljs-number">8.</span>查询工资比 &quot;灭绝&quot; 高的员工信息。<br><span class="hljs-comment">-- a.查询 &quot;灭绝&quot; 的薪资</span><br><span class="hljs-keyword">select</span> salary<br><span class="hljs-keyword">from</span> emp<br><span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;灭绝&#x27;</span>;<br><span class="hljs-comment">-- b.查询比她工资高的员工数据</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> emp<br><span class="hljs-keyword">where</span> salary <span class="hljs-operator">&gt;</span> (<span class="hljs-keyword">select</span> salary <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;灭绝&#x27;</span>);<br><br>#<span class="hljs-number">9.</span>查询比平均薪资高的员工信息<br><span class="hljs-comment">-- a.查询员工的平均薪资</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(salary)<span class="hljs-keyword">from</span> emp;<br><span class="hljs-comment">-- b.查询比平均薪资高的员工信息</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> emp<br><span class="hljs-keyword">where</span> salary <span class="hljs-operator">&gt;</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(salary) <span class="hljs-keyword">from</span> emp);<br><br><br><br>#<span class="hljs-number">10.</span>查询低于本部门平均工资的员工信息<br><span class="hljs-comment">-- a.查询指定部门平均薪资</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(e.salary) <span class="hljs-keyword">from</span> emp e  <span class="hljs-keyword">where</span> e.dept_id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(e.salary) <span class="hljs-keyword">from</span> emp e  <span class="hljs-keyword">where</span> e.dept_id <span class="hljs-operator">=</span> <span class="hljs-number">2</span>;<br><span class="hljs-comment">-- b.查询低于本部门平均工资的员工信息</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> emp e2<br><span class="hljs-keyword">where</span> e2.salary <span class="hljs-operator">&lt;</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(e1.salary) <span class="hljs-keyword">from</span> emp e1 <span class="hljs-keyword">where</span> e1.dept_id <span class="hljs-operator">=</span> e2.id);<br><br><br><br>#<span class="hljs-number">11.</span> 查询所有的部门信息, 并统计部门的员工人数<br><span class="hljs-keyword">select</span> d.id, d.name, (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> emp e <span class="hljs-keyword">where</span> e.dept_id <span class="hljs-operator">=</span> d.id) <span class="hljs-string">&#x27;人数&#x27;</span><br><span class="hljs-keyword">from</span> dept d;<br><br></code></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="6-1事务简介"><a href="#6-1事务简介" class="headerlink" title="6.1事务简介"></a>6.1事务简介</h3><p>事务 是一组操作的集合，它是一个不可分割的工作单位，事务会把所有的操作作为一个整体一起向系 统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。 </p><p>就比如: 张三给李四转账1000块钱，张三银行账户的钱减少1000，而李四银行账户的钱要增加 1000。 这一组操作就必须在一个事务的范围内，要么都成功，要么都失败。</p><p><img src="/../imgs/first/%E8%BD%AC%E8%B4%A6%E5%9B%BE%E7%A4%BA2023-04-07_09-45-07-168353219772933.png" alt="转账图示"></p><p>正常情况: 转账这个操作, 需要分为以下这么三步来完成 , 三步完成之后, 张三减少1000, 而李四 增加1000, 转账成功 :</p><p><img src="/../imgs/first/%E8%BD%AC%E8%B4%A6%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5%E4%B8%89%E6%AD%A5_2023-04-07_09-46-18-168353222920035.png" alt="转账正常情况三步"></p><p>异常情况: 转账这个操作, 也是分为以下这么三步来完成 , 在执行第三步是报错了, 这样就导致张 三减少1000块钱, 而李四的金额没变, 这样就造成了数据的不一致, 就出现问题了。</p><p><img src="/../imgs/first/%E8%BD%AC%E8%B4%A6%E5%BC%82%E5%B8%B82023-04-07_09-50-00-168353224888237.png" alt="转账异常"></p><p>为了解决上述的问题，就需要通过数据的事务来完成，我们只需要在业务逻辑执行之前开启事务，执行 完毕后提交事务。如果执行过程中报错，则回滚事务，把数据恢复到事务开始之前的状态。</p><p><img src="/../imgs/first/%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%89%A7%E8%A1%8C%E4%B9%8B%E5%89%8D%E5%BC%80%E5%90%AF%E4%BA%8B%E5%8A%A1_2023-04-07_09-54-14-168353296121439.png" alt="业务逻辑执行之前开启事务"></p><p>注意： 默认MySQL的事务是自动提交的，也就是说，当执行完一条DML语句时，MySQL会立即隐 式的提交事务。</p><h3 id="6-2事务操作"><a href="#6-2事务操作" class="headerlink" title="6.2事务操作"></a>6.2事务操作</h3><p>数据准备：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">exists</span> account;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> account(<br>id <span class="hljs-type">int</span> <span class="hljs-keyword">primary</span> key AUTO_INCREMENT comment <span class="hljs-string">&#x27;ID&#x27;</span>,<br>name <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) comment <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>money <span class="hljs-keyword">double</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>) comment <span class="hljs-string">&#x27;余额&#x27;</span><br>) comment <span class="hljs-string">&#x27;账户表&#x27;</span>;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> account(name, money) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;张三&#x27;</span>,<span class="hljs-number">2000</span>), (<span class="hljs-string">&#x27;李四&#x27;</span>,<span class="hljs-number">2000</span>);<br><br><br><span class="hljs-comment">-- 数据恢复</span><br><span class="hljs-keyword">update</span> account <span class="hljs-keyword">set</span> money <span class="hljs-operator">=</span> <span class="hljs-number">2000</span> <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;张三&#x27;</span> <span class="hljs-keyword">or</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;李四&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="6-2-1未控制事务"><a href="#6-2-1未控制事务" class="headerlink" title="6.2.1未控制事务"></a>6.2.1未控制事务</h4><h5 id="1-测试正常情况"><a href="#1-测试正常情况" class="headerlink" title="1). 测试正常情况"></a>1). 测试正常情况</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 事务演示 --</span><br><br># 测试正常情况<br><span class="hljs-comment">-- 1. 查询张三余额</span><br><span class="hljs-keyword">select</span> money <span class="hljs-keyword">from</span> account <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;张三&#x27;</span>;<br><span class="hljs-comment">-- 2. 张三的余额减少1000</span><br><span class="hljs-keyword">update</span> account <span class="hljs-keyword">set</span> money <span class="hljs-operator">=</span> money <span class="hljs-operator">-</span> <span class="hljs-number">1000</span> <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;张三&#x27;</span>;<br><span class="hljs-comment">-- 3. 李四的余额增加1000</span><br><span class="hljs-keyword">update</span> account <span class="hljs-keyword">set</span> money <span class="hljs-operator">=</span> money <span class="hljs-operator">+</span> <span class="hljs-number">1000</span> <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;李四&#x27;</span>;<br></code></pre></td></tr></table></figure><p>测试完毕之后检查数据的状态, 可以看到数据操作前后是一致的。</p><p><img src="/../imgs/first/%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5%E5%9B%BE%E7%A4%BA_2023-04-07_10-53-23-168353298577441.png" alt="正常情况图示"></p><h5 id="2-测试异常情况"><a href="#2-测试异常情况" class="headerlink" title="2). 测试异常情况"></a>2). 测试异常情况</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"># 测试异常情况<br><span class="hljs-comment">-- 1. 查询张三余额</span><br><span class="hljs-keyword">select</span> money <span class="hljs-keyword">from</span> account <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;张三&#x27;</span>;<br><span class="hljs-comment">-- 2. 张三的余额减少1000</span><br><span class="hljs-keyword">update</span> account <span class="hljs-keyword">set</span> money <span class="hljs-operator">=</span> money <span class="hljs-operator">-</span> <span class="hljs-number">1000</span> <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;张三&#x27;</span>;<br><br><span class="hljs-comment">-- 3. 李四的余额增加1000</span><br> <span class="hljs-keyword">update</span> <span class="hljs-keyword">update</span> account <span class="hljs-keyword">set</span> money <span class="hljs-operator">=</span> money <span class="hljs-operator">+</span> <span class="hljs-number">1000</span> <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;李四&#x27;</span>;<br></code></pre></td></tr></table></figure><p>我们把数据都恢复到2000， 然后再次一次性执行上述的SQL语句(出错了…. 这句话不符合SQL语 法,执行就会报错)，检查最终的数据情况, 发现数据在操作前后不一致了。</p><p><img src="/../imgs/first/%E5%BC%82%E5%B8%B8%E6%83%85%E5%86%B51_2023-04-07_11-02-38-168353300628643.png" alt="异常情况"></p><h6 id="6-2-2控制事务一"><a href="#6-2-2控制事务一" class="headerlink" title="6.2.2控制事务一"></a>6.2.2控制事务一</h6><p>1). 查看&#x2F;设置事务提交方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查看设置事务提交方式  1自动 0手动</span><br><span class="hljs-keyword">select</span> @<span class="hljs-variable">@autocommit</span>;<br><span class="hljs-keyword">set</span>  @<span class="hljs-variable">@autocommit</span><span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><p>2). 提交事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 提交事务</span><br><span class="hljs-keyword">commit</span> ;<br></code></pre></td></tr></table></figure><p> 3). 回滚事务 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 回滚事务</span><br><span class="hljs-keyword">rollback</span> ;<br></code></pre></td></tr></table></figure><p>注意：上述的这种方式，我们是修改了事务的自动提交行为, 把默认的自动提交修改为了手动提 交, 此时我们执行的DML语句都不会提交, 需要手动的执行commit进行提交。</p><h6 id="6-2-3控制事务二"><a href="#6-2-3控制事务二" class="headerlink" title="6.2.3控制事务二"></a>6.2.3控制事务二</h6><p>1). 开启事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-comment">-- 开启事务</span><br><span class="hljs-keyword">start</span> transaction ;<br> <span class="hljs-comment">-- 或者</span><br> <span class="hljs-keyword">BEGIN</span> ;<br></code></pre></td></tr></table></figure><p>2). 提交事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-comment">-- 提交事务</span><br><span class="hljs-keyword">commit</span> ;<br></code></pre></td></tr></table></figure><p>3). 回滚事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-comment">-- 回滚事务</span><br><span class="hljs-keyword">rollback</span> ;<br></code></pre></td></tr></table></figure><h3 id="6-3事务四大特性"><a href="#6-3事务四大特性" class="headerlink" title="6.3事务四大特性"></a>6.3事务四大特性</h3><h3 id="6-4并发事务问题"><a href="#6-4并发事务问题" class="headerlink" title="6.4并发事务问题"></a>6.4并发事务问题</h3><h3 id="6-5事务隔离级别"><a href="#6-5事务隔离级别" class="headerlink" title="6.5事务隔离级别"></a>6.5事务隔离级别</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>shell</title>
    <link href="/2023/05/08/shell/"/>
    <url>/2023/05/08/shell/</url>
    
    <content type="html"><![CDATA[<h2 id="shell编程快速入门"><a href="#shell编程快速入门" class="headerlink" title="shell编程快速入门"></a>shell编程快速入门</h2><h3 id="为什么要学习Shell编程"><a href="#为什么要学习Shell编程" class="headerlink" title="为什么要学习Shell编程"></a>为什么要学习Shell编程</h3><ol><li>Linux运维 工程师在进行服务器集群管理时,需要编写Shell程序来进行服务器管理。</li><li>对于JavaEE和Python程序员来说 ,工作的需要，你的老大会要求你编写一些Shell脚本进行程序或者是服务器的维护，比如编写一个定时备份数据库的脚本。</li><li>对于大数据程序员来说,需要编写Shell程序来管理集群。</li></ol><h3 id="Shell是什么"><a href="#Shell是什么" class="headerlink" title="Shell是什么"></a>Shell是什么</h3><p>Shell是一个命令行解释器 ,它为用户提供了一个向Linux内核发送请求以便运行程序的界面系统级程序，用户可以用Shell来启动、挂起、停止甚至是编写一些程序。</p><p><img src="/../imgs/first/Shell%E6%98%AF%E4%BB%80%E4%B9%88_2023-02-20_14-32-18-16835298707971.png" alt="shell是什么"></p><h3 id="Shell脚本执行方式"><a href="#Shell脚本执行方式" class="headerlink" title="Shell脚本执行方式"></a>Shell脚本执行方式</h3><ul><li>脚本格式要求</li></ul><ol><li>脚本以#!&#x2F;bin&#x2F;bash开头</li><li>脚本需要有可执行权限</li></ol><ul><li><p>脚本的常用执行方式</p><ol><li><p>（输入脚本的绝对路径或相对路径）</p><p>说明：首先赋予脚本的+x 权限，在执行脚本。</p></li><li><p>（sh + 脚本）</p></li></ol><p>​       说明：不需要赋予脚本+x的权限，直接执行即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.编写第一个Shell脚本<br>需求说明：创建一个Shell脚本，输出hello ，bqm<br>localhost:/ <span class="hljs-comment"># cd /home</span><br>localhost:/home <span class="hljs-comment"># ls</span><br>aaa.txt  ifdemo.sh  ikun  tom<br>localhost:/home <span class="hljs-comment"># touch hello.sh</span><br>localhost:/home <span class="hljs-comment"># ls</span><br>aaa.txt  hello.sh  ifdemo.sh  ikun  tom<br>localhost:/home <span class="hljs-comment"># vim hello.sh</span><br><span class="hljs-comment">#！/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello.bqm!&quot;</span><br><br><span class="hljs-comment">#方式1执行</span><br><span class="hljs-comment">#查看发现没有x 权限</span><br>localhost:/home <span class="hljs-comment"># ll</span><br>总计 8<br>...<br>-rw-r--r-- 1 ikun ikun  30  2月20日 15:34 hello.sh<br>...<br><span class="hljs-comment">#添加权限</span><br>localhost:/home <span class="hljs-comment"># chmod u+x hello.sh</span><br>localhost:/home <span class="hljs-comment"># ll  #查看文件状态</span><br>总计 8<br>...<br>-rwxr--r-- 1 ikun ikun  30  2月20日 15:34 hello.sh<br>...<br><br><span class="hljs-comment">#方式2执行</span><br>mlocalhost:/home <span class="hljs-comment"># sh hello.sh</span><br>hello,bqm!<br>localhost:/home <span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure></li></ul><h2 id="shell变量"><a href="#shell变量" class="headerlink" title="shell变量"></a>shell变量</h2><p><strong>shell变量介绍</strong></p><ol><li>Linux Shell中的变量分为,系统变量和用户自定义变量。</li><li>系统变量:$HOME、$PWD、$SHELL、$USER等等，比如:echo $HOME 等等.</li><li>显示当前shell中所有变量:set</li></ol><p><strong>shell变量的定义</strong></p><p>基本语法：</p><ol><li>定义变量：变量名&#x3D;值</li><li>撤销变量：unset变量</li><li>声明静态变量：readonly 静态变量，不能unset</li></ol><p><strong>定义变量的规则</strong></p><ol><li>变量名称可以字母，数字和下划线组成，但是不能以数字开头</li><li>等号两侧不能有空格</li><li>变量名称一般习惯大写</li></ol><p><strong>将命令返回值赋给变量</strong></p><ol><li><pre><code class="bash">A=`data`  反引号，运行里面的命令，并把结果返回给变量A<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>   <br><br><span class="hljs-number">2</span>. ```bash<br>   A=$(date)等价于反引号<br></code></pre></td></tr></table></figure></code></pre></li></ol><p>案例1∶定义变量A</p><p>案例2∶撤销变量A<br>案例3:声明静态的变量B&#x3D;2，不能unset<br>案例4:可把变量提升为全局环境变量，可供其他shell程序使用[该案例后面讲]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim var.sh<br><br><span class="hljs-comment">#/bin/bash</span><br><span class="hljs-comment">#案例1∶定义变量A</span><br> A=100<br><span class="hljs-comment">#输出变量需要加上$</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$A</span><br><span class="hljs-built_in">echo</span> A=<span class="hljs-variable">$A</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;A=<span class="hljs-variable">$A</span>&quot;</span><br><span class="hljs-comment">#案例2∶撤销变量A</span><br><span class="hljs-built_in">unset</span> A<br><span class="hljs-built_in">echo</span> A=<span class="hljs-variable">$A</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;A=<span class="hljs-variable">$A</span>&quot;</span><br><span class="hljs-comment">#案例3:声明静态的变量B=2，不能unset</span><br><span class="hljs-built_in">readonly</span> B=2<br><span class="hljs-built_in">echo</span> B=<span class="hljs-variable">$B</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;B=<span class="hljs-variable">$B</span>&quot;</span><br><span class="hljs-comment">#将指令返回结果</span><br>C=`<span class="hljs-built_in">date</span>`<br>D=$(<span class="hljs-built_in">date</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;C=<span class="hljs-variable">$C</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;D=<span class="hljs-variable">$D</span>&quot;</span><br>          <br><br><span class="hljs-comment">#执行</span><br>sh var.sh<br>[ikun@bqm ~]$ sh var.sh<br>100<br>A=100<br>A=100<br>A=<br>A=<br>B=2<br>B=2<br>C=2023年 03月 15日 星期三 10:32:49 CST<br>D=2023年 03月 15日 星期三 10:32:49 CST<br><br><br></code></pre></td></tr></table></figure><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>基本语法</p><ol><li>export 变量名&#x3D;变量值（将shell变量输出为环境变量&#x2F;全局变量）</li><li>source 配置文件（让修改后的配置信息立马生效）</li><li>echo $变量名（查询环境变量的值）</li></ol><p>快速入门</p><ol><li>在&#x2F;etc&#x2F;profile 文件定义TOMCAT_HOME环境变量</li><li>查看环境变量TOMCAT_HOME的值</li><li>在另外一个shell程序中使用 TOMCAT_HOME</li></ol><p>注意： 要输出TOMCAT_HOME环境变量前，需要让其先生效  source &#x2F;etc&#x2F;profile</p><h2 id="位置参数变量"><a href="#位置参数变量" class="headerlink" title="位置参数变量"></a>位置参数变量</h2><ul><li><p>介绍</p><p>当我们执行一个shell脚本时，如果希望获取到命令行的参数信息，就可以使用到位置参数变量</p></li></ul><p>比如 : .&#x2F;myshell.sh 100 200，这个就是一个执行shell的命令行，可以在myshell 脚本中获取到参数<br>信息</p><ul><li>基本语法</li></ul><p>$n (功能描述:n为数字，$0代表命令本身，$1-$9代表第一到第九个参数，十以上的参数，十以上的参数需要用大括号包含，如$(10》)</p><p><code>$*</code> (功能描述:这个变量代表命令行中所有的参数，<code>$*</code>把所有的参数看成一个整体)</p><p>$@(功能描述: 这个变量也代表命令行中所有的参数，不过$@把每个参数区分对待</p><p>$#(功能描述: 这个变量代表命令行中所有参数的个数 )</p><ul><li><p>位置参数变量</p><p>案例: 编写一个shell脚本 position.sh ，在脚本中获取到命令行的各个参数信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim myshell.sh <br><span class="hljs-comment">#/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$0</span> <span class="hljs-variable">$1</span> <span class="hljs-variable">$2</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;所有的参数=<span class="hljs-variable">$S</span>*&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;参数的个数=<span class="hljs-variable">$#</span>&quot;</span><br><br>执行<br>[ikun@bqm /]$ sh myshell.sh  100 200 300<br>myshell.sh 100 200<br>所有的参数=*<br>100 200 300<br>参数的个数=3<br><br><br></code></pre></td></tr></table></figure></li></ul><h2 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h2><ul><li>基本介绍</li></ul><p>就是shell设计者事先已经定义好的变量，可以直接在shell脚本中使用</p><ul><li><p>基本语法</p><p>$$(功能描述 : 当前进程的进程号(PID))</p><p>$!(功能描述 : 后台运行的最后一个进程的进程号( PID ))</p><p>$?(功能描述:最后一次执行的命令的返回状态。如果这个变量的值为0，证明上一个命令正确执行；</p><p>如果这个变量的值为非0(具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确了。)</p><ul><li>应用实例</li></ul><p>在一个shell脚本中简单使用一下预定义变量</p><p>Per.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;当前执行的进程id=$$&quot;</span><br><span class="hljs-comment">#以后台的方式运行一个脚本，并获取他的进程号</span><br>/home/myshell.sh  &amp;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;最后一个后台进程的id=$!&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;执行的结果=$?&quot;</span><br><br><span class="hljs-comment">#执行</span><br>[ikun@bqm home]$ sudo sh Per.sh<br>当前执行的进程<span class="hljs-built_in">id</span>=2438<br>最后一个后台进程的<span class="hljs-built_in">id</span>=2439<br>执行的结果=0<br><br></code></pre></td></tr></table></figure></li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>基本介绍</p><p>学习如何在shell中进行各种运算操作</p><ul><li><p>基本语法</p><ol><li>”$((运算式))”或“$[运算式]”或者 expr m + n &#x2F;&#x2F;expression表达式 </li><li>注意expr运算符间要有空格, 如果希望将 expr 的结果赋给某个变量，使用”</li><li>expr m - n</li><li><code>expr \*, /,%</code> 乘，除，取余</li></ol><p>应用实例案例</p><p>1 : 计算(2+3)X4的值案例</p><p>2 : 请求出命令行的两个参数[整数]的和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim opera.sh<br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#计算(2+3)X4的值案例</span><br><span class="hljs-comment">#请求出命令行的两个参数[整数]的和</span><br><span class="hljs-comment">#方法一</span><br>Result1=$(((<span class="hljs-number">2</span>+<span class="hljs-number">3</span>)*<span class="hljs-number">4</span>))<br><span class="hljs-built_in">echo</span> result1=<span class="hljs-variable">$Result1</span><br><span class="hljs-comment">#方法二</span><br>Result2=$[(2+3)*4]<br><span class="hljs-built_in">echo</span> result2=<span class="hljs-variable">$Result2</span><br><span class="hljs-comment">#方法三</span><br>TEMP=`<span class="hljs-built_in">expr</span> 2 + 3`<br>Result3=`<span class="hljs-built_in">expr</span> <span class="hljs-variable">$TEMP</span> \* 4`<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;temp=<span class="hljs-variable">$TEMP</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;result3=<span class="hljs-variable">$Result3</span>&quot;</span><br><span class="hljs-comment">#2</span><br>SUM=$[<span class="hljs-variable">$1</span>+<span class="hljs-variable">$2</span>]<br><span class="hljs-built_in">echo</span> <span class="hljs-built_in">sum</span>=<span class="hljs-variable">$SUM</span><br><br><br><span class="hljs-comment">#执行</span><br>[ikun@bqm home]$ sh oper.sh 1 2<br>result1=20<br>result2=20<br>temp=5<br>result3=20<br><span class="hljs-built_in">sum</span>=3<br></code></pre></td></tr></table></figure></li></ul><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><ul><li><p>判断语句</p><p>常用判断条件</p><p>1）&#x3D; 字符串比较</p><p>2）两个整数的比较</p><p>-lt 小于  -le 小于等于  -eq 等于   -gt大于  -ge大于等于  -ne不等于</p><p>3)按照文件权限进行判断</p><p>-r有读的权限   -w有写的权限  -x有执行的权限</p><p>4）按照文件类型进行判断 </p><p>-f 文件存在并且是一个常规的文件</p><p>-e 文件存在</p><p>-d 文件存在并且是一个目录 </p><p>基本语法：</p><p>[ condition ] (注意condition前后要有空格)</p><p> 非空返回true，可使用$验证 （0为true ， &gt;1 为false）</p><p>应用实例： </p><table><thead><tr><th>[ bqm ]</th><th>返回true</th></tr></thead><tbody><tr><td>[  ]</td><td>返回false</td></tr><tr><td>[ condition ] &amp;&amp; echo OK || echo notok</td><td>条件满足，执行后面的语句</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">案例1：“ok”是否等于“ok”<br>案例2： 23是否大于22<br>案例3：/root/home/aaa.txt目录中的文件是否存在<br><br> vim ifdemo.sh<br> <br> <br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#案例1：&quot;ok&quot; 是否等于&quot;ok&quot;  判断语句： =</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;ok&quot;</span> = <span class="hljs-string">&quot;ok&quot;</span> ]<br><span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;equal&quot;</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-comment">#案例2：23是否大于22 判断语句： -ge</span><br><span class="hljs-keyword">if</span> [ 23 -ge 22 ]<br><span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;大于&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#案例3：/home/aaa.txt  目录中的文件是否存在   判断语句： -f</span><br><span class="hljs-keyword">if</span> [ -f /home/aaa.txt ] <br><span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;存在&quot;</span><br><span class="hljs-keyword">fi</span><br><br><br><span class="hljs-comment">#执行结果</span><br><br>localhost:/home <span class="hljs-comment"># sh ifdemo.sh</span><br>equal<br>大于<br>存在<br></code></pre></td></tr></table></figure></li></ul><h3 id="单分支多分支"><a href="#单分支多分支" class="headerlink" title="单分支多分支"></a>单分支多分支</h3><p>if判断</p><p>基本语法 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ 条件判断式 ]<br><span class="hljs-keyword">then</span><br>  代码<br><span class="hljs-keyword">fi</span><br><br><br>或者多分支<br><span class="hljs-keyword">if</span> [ 条件判断式 ]<br><span class="hljs-keyword">then</span><br>代码<br><span class="hljs-keyword">elif</span>[ 条件判断式 ]<br><span class="hljs-keyword">then</span><br>代码<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>[ 条件判断式 ]，中括号和条件判断式之间必须有空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">案例：请编写一个shell程序，如果输入的参数，大于等于60，择输出及格了，若小于60，则输出不及格<br>vim ifcase.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$1</span> -ge 60 ]<br><span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;及格了&quot;</span><br><span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$1</span> -lt 60 ]<br><span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;不及格&quot;</span>   <br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#执行结果</span><br><br>mlocalhost:/home <span class="hljs-comment"># sh ifcase.sh 78</span><br>及格了<br>localhost:/home <span class="hljs-comment"># sh ifcase.sh 50</span><br>不及格<br></code></pre></td></tr></table></figure><h3 id="case语句"><a href="#case语句" class="headerlink" title="case语句"></a>case语句</h3><p>基本语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">case</span> $变量名 <span class="hljs-keyword">in</span><br><span class="hljs-string">&quot;值&quot;</span>1)<br>如果变量的值等于值1，则执行程序1<br>;;<br><span class="hljs-string">&quot;值&quot;</span>2)<br>如果变量的值等于值2，则执行程序2<br>;;<br>...省略其他分支...<br>*）<br>如果变量的值都不是以上的值，则执行此程序<br>;;<br><span class="hljs-keyword">esac</span><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">案例1：当命令行参数是1时，输出<span class="hljs-string">&quot;周一&quot;</span>，是2时，就输出<span class="hljs-string">&quot;周二&quot;</span>，其他情况输出 <span class="hljs-string">&quot;other&quot;</span><br>vim testcase.sh<br><br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-keyword">case</span> <span class="hljs-variable">$1</span> <span class="hljs-keyword">in</span> <br><span class="hljs-string">&quot;1&quot;</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;周一&quot;</span><br>;;<br><span class="hljs-string">&quot;2&quot;</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;周二&quot;</span><br>;;<br><span class="hljs-string">&quot;3&quot;</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;other&quot;</span><br>;;<br><span class="hljs-string">&quot;4&quot;</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;other&quot;</span><br>;;<br><span class="hljs-keyword">esac</span><br><br><br><span class="hljs-comment">#执行结果</span><br>localhost:/home <span class="hljs-comment"># sh testcase.sh 1</span><br>周一<br>localhost:/home <span class="hljs-comment"># sh testcase.sh 2</span><br>周二<br>localhost:/home <span class="hljs-comment"># sh testcase.sh 3</span><br>other<br></code></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>基本语法1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> 变量 <span class="hljs-keyword">in</span> 值1 值2 值3...<br><span class="hljs-keyword">do</span><br>程序<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>案例1：打印命令行输入的参数 （这里可以看出$*和$@的区别）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim testfor1.sh<br> <br><span class="hljs-comment">#!/bin/bashi</span><br><span class="hljs-comment"># 注意 $* 是把输入的参数当成一个整体，所以只会输出一句话</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;$*&quot;</span><br><span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;num is <span class="hljs-variable">$i</span>&quot;</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment">#使用 $@来获取输入的参数，注意，这时是分别对待，所以有几个参数，就输出几句</span><br><span class="hljs-built_in">echo</span>  <span class="hljs-string">&quot;=================================================&quot;</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;num is <span class="hljs-variable">$j</span>&quot;</span><br><span class="hljs-keyword">done</span> <br><br><br><span class="hljs-comment">#执行结果</span><br>localhost:/home <span class="hljs-comment"># sh testfor1.sh 100 200 300</span><br>num is 100 200 300<br>=================================================<br>num is 100<br>num is 200<br>num is 300<br></code></pre></td></tr></table></figure><p>基本语法2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> ((初始值；循环控制条件；变量变化))<br><span class="hljs-keyword">do</span><br>程序<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>案例1：从1加到100的值输出显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim testfor2.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#案例1 ：从1加到100的值输出显示</span><br><span class="hljs-comment">#定义一个变量 SUM</span><br>SUM=0<br><span class="hljs-keyword">for</span>((i=<span class="hljs-number">1</span>; i&lt;=<span class="hljs-number">100</span>; i++))<br><span class="hljs-keyword">do</span><br>        <span class="hljs-comment">#写上你的业务代码</span><br>        SUM=$[ <span class="hljs-variable">$SUM</span>+<span class="hljs-variable">$i</span> ]<br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;总和SUM=<span class="hljs-variable">$SUM</span>&quot;</span><br><br><br><span class="hljs-comment">#执行结果</span><br>localhost:/home <span class="hljs-comment"># sh testfor2.sh </span><br>总和SUM=5050<br></code></pre></td></tr></table></figure><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>基本语法1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">while</span> [ 条件判断式 ]<br><span class="hljs-keyword">do</span><br>程序<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>案例1：从命令行输入一个数n，统计从1+…+n的值是多少？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim testWhile.sh<br><br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#从命令行输入一个数n，统计从1+...+n的值是多少</span><br>SUM=0<br>i=0<br><span class="hljs-keyword">while</span> [ <span class="hljs-variable">$i</span> -le <span class="hljs-variable">$1</span> ]<br><span class="hljs-keyword">do</span><br>        SUM=$[<span class="hljs-variable">$SUM</span>+<span class="hljs-variable">$i</span>]<br>        <span class="hljs-comment">#i自增</span><br>        i=$[<span class="hljs-variable">$i</span>+1]<br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment">#执行结果</span><br>tom@localhost:~&gt; vim testWhile.sh<br>mtom@localhost:~&gt; sh testWhile.sh 1<br>执行结果=1<br>tom@localhost:~&gt; sh testWhile.sh 10<br>执行结果=55<br>tom@localhost:~&gt; <br></code></pre></td></tr></table></figure><h2 id="read读取控制台输入"><a href="#read读取控制台输入" class="headerlink" title="read读取控制台输入"></a>read读取控制台输入</h2><p>基本语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">read</span>（选项）（参数）<br>选项： <br>-p：指定读取值时的提示符<br>    -t：指定读取值时等待的时间（秒），如果没有在指定的时间内输入，就不再等待了。<br>    参数<br>    变量：指定读取值的变量名<br>    <br></code></pre></td></tr></table></figure><p>案例1：读取控制台输入一个num1值。</p><p>案例2：读取控制台输入一个num2值，在10秒内输入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim  testRead.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#案例1：读取控制台输入一个NUM1值</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入一个数NUM1=&quot;</span> NUM1<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;你输入的NUM1=<span class="hljs-variable">$NUM1</span>&quot;</span><br><span class="hljs-comment">#案例2:读取控制太输入一个NUM1值，在10秒内完成输入</span><br><span class="hljs-built_in">read</span> -t 10 -p <span class="hljs-string">&quot;请输入一个数NUM2=&quot;</span> NUM2<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;你输入的NUM2=&quot;</span><span class="hljs-variable">$NUM2</span><br><br><span class="hljs-comment">#执行结果</span><br><br>localhost:/home <span class="hljs-comment"># sh testRead.sh </span><br>请输入一个数NUM1=1<br>你输入的NUM1=1<br>请输入一个数NUM2=2 <span class="hljs-comment">#10秒内输入</span><br>你输入的NUM2=2<br><br>localhost:/home <span class="hljs-comment"># sh testRead.sh </span><br>请输入一个数NUM1=1<br>你输入的NUM1=1<br>请输入一个数NUM2=你输入的NUM2=  <span class="hljs-comment">#超过10秒后输入</span><br>localhost:/home <span class="hljs-comment"># 2</span><br>如果 <span class="hljs-string">&#x27;2&#x27;</span> 不是输入错误的话，你可以使用 command-not-found 命令来查找它在哪个软件包中，就像这样：<br>    cnf 2<br></code></pre></td></tr></table></figure><h2 id="系统函数"><a href="#系统函数" class="headerlink" title="系统函数"></a>系统函数</h2><p>函数介绍</p><p>shell编程和其他语言一样，有系统函数，也可以自定义函数。系统函数，（这里就先介绍两个）</p><ul><li><p>系统函数</p><p>基本语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">功能：返回完整路径最后 / 的部分，常用于获取文件名<br><br><span class="hljs-built_in">basename</span> [pathname][suffix]<br><span class="hljs-built_in">basename</span> [String][suffix]<br>功能描述：<span class="hljs-built_in">basename</span>命令会删掉所有的前缀包括最后一个（ <span class="hljs-string">&#x27;/&#x27;</span> ）字符，然后将字符串显示出来<br>选项：suffix为后缀，如果suffix被指定了，<span class="hljs-built_in">basename</span>会将pathname或string中的suffix去掉。<br></code></pre></td></tr></table></figure></li></ul><p>案例1：请返回&#x2F;home&#x2F;aaa.txt的 “test.txt”部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">localhost:/home <span class="hljs-comment"># basename /home/aaa/test.txt</span><br>test.txt<br></code></pre></td></tr></table></figure><ul><li>dirname基本语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">功能：返回完整路径最后 / 的前面的部分，常用于返回路径部分<br><br><span class="hljs-built_in">dirname</span> 文件绝对路径 （功能描述：从给定的包含绝对路径的文件名中去除文件名）（非目录的部分），然后返回剩下的路径（目录的部分）<br><br></code></pre></td></tr></table></figure><p>案例1：请返回&#x2F;home&#x2F;aaa&#x2F;test.txt 的 &#x2F;home&#x2F;aaa</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">localhost:/home <span class="hljs-comment"># dirname /home/aaa/text.txt</span><br>/home/aaa<br><br>localhost:/home <span class="hljs-comment"># dirname /home/aaa/bbb/ccc/ddd/text.txt</span><br>/home/aaa/bbb/ccc/ddd<br></code></pre></td></tr></table></figure><h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><p>基本语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[ <span class="hljs-keyword">function</span> ] funname[()]<br>&#123;<br> Action;<br> [<span class="hljs-built_in">return</span> int;]<br>&#125;<br> 调用直接写函数名：funname [值]<br> <br></code></pre></td></tr></table></figure><p>案例1:计算输入两个参数的和（动态的获取），getSum</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim  testFun.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#案例1:计算输入两个参数的和（动态的获取），getSum</span><br><span class="hljs-comment">#定义函数  getSum</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">getSum</span></span>()&#123;<br> SUM=$[<span class="hljs-variable">$n1</span>+<span class="hljs-variable">$n2</span>]<br> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;和是=<span class="hljs-variable">$SUM</span>&quot;</span><br><br>&#125;<br><br><span class="hljs-comment">#输入两个值</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入一个数n1=&quot;</span> n1<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入一个数n2=&quot;</span> n2<br><span class="hljs-comment">#调用自定义函数</span><br>getSum <span class="hljs-variable">$n1</span> <span class="hljs-variable">$n2</span><br><br><span class="hljs-comment">#执行结果</span><br>localhost:/home <span class="hljs-comment"># sh testFun.sh</span><br>请输入一个数n1=1<br>请输入一个数n2=2<br>和是=3<br><br><br></code></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo + Github 搭建个人博客笔记</title>
    <link href="/2023/05/04/hello-world/"/>
    <url>/2023/05/04/hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="个人博客搭建笔记"><a href="#个人博客搭建笔记" class="headerlink" title="个人博客搭建笔记"></a>个人博客搭建笔记</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在冗杂的信息流里面容易破防，写博客的想法用于防止健忘以及后续回头避坑</p><p>本文就详细介绍下如何使用 Hexo + GitHub 搭建免费个人博客网站的教程。</p><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><h3 id="1-1首先安装nodejs-git-vs"><a href="#1-1首先安装nodejs-git-vs" class="headerlink" title="1.1首先安装nodejs   git    vs"></a>1.1首先安装nodejs   git    vs</h3><p>nodejs<a href="https://nodejs.org/en">下载</a></p><p>git<a href="https://git-scm.com/">下载</a></p><p>vs[下载](<a href="https://code.visualstudio.com/">Visual Studio Code - Code Editing. Redefined</a>)</p><p>下载安装都很简单一直next 就可以 在此不多做赘述</p><h3 id="1-2检验基础环境是否成功安装"><a href="#1-2检验基础环境是否成功安装" class="headerlink" title="1.2检验基础环境是否成功安装"></a>1.2检验基础环境是否成功安装</h3><p>用 <strong>Win + R</strong> 打开运行，输入 <strong>cmd</strong> 并进入cmd</p><p><strong>node.js</strong> 的检查</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br></code></pre></td></tr></table></figure><p><strong>npm</strong> 的检查</p><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> -v<br></code></pre></td></tr></table></figure><p><strong>Git</strong> 的检查</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><h3 id="1-3以上有显示版本号，则说明安装成功"><a href="#1-3以上有显示版本号，则说明安装成功" class="headerlink" title="1.3以上有显示版本号，则说明安装成功"></a>1.3以上有显示版本号，则说明安装成功</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">检查版本<br>C:\Users\Bqm&gt;node -v<br>v16.13.1<br><br>C:\Users\Bqm&gt;git --version<br>git version 2.31.1.windows.1<br><br>C:\Users\Bqm&gt;npm -v<br>8.1.2<br><br></code></pre></td></tr></table></figure><h2 id="二、配置nodejs"><a href="#二、配置nodejs" class="headerlink" title="二、配置nodejs"></a>二、配置nodejs</h2><h3 id="2-1创建nodejs文件夹"><a href="#2-1创建nodejs文件夹" class="headerlink" title="2.1创建nodejs文件夹"></a>2.1创建nodejs文件夹</h3><p>在nodejs根目录，创建node_global  和  node_cache文件夹(建议使用下面的命令行方式安装)</p><p><img src="/../imgs/first/nodejs%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9_2023-05-05_10-22-06.png" alt="创建nodejs文件夹"></p><p><strong>使用指令安装</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"># 管理员身份- 打开CMD，配置路径：（注意一定要管理员身份运行CMD！！！路径改成你自己的路径，不要无脑复制！！！）<br>npm config set prefix &quot;C:\Program Files\nodejs\node_global&quot;<br>npm config set cache &quot;C:\Program Files\nodejs\node_cache&quot;<br></code></pre></td></tr></table></figure><h3 id="2-2配置nodejs环境变量"><a href="#2-2配置nodejs环境变量" class="headerlink" title="2.2配置nodejs环境变量"></a>2.2配置nodejs环境变量</h3><p>win10&amp;win11：桌面右键此电脑——属性——高级系统设置——高级——环境变量</p><p><strong>添加变量</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">变量名： NODE_HOME<br>变量值：C:\Program Files\nodejs<br></code></pre></td></tr></table></figure><p><img src="/../imgs/first/%E9%85%8D%E7%BD%AEnodejs%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F_2023-05-05_10-39-41.png" alt="添加变量"></p><p>系统变量 中 选择 Path 修改和添加如下<strong>属性</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">添加属性<br>%NODE_HOME%<br>%NODE_HOME%\node_global<br>%NODE_HOME%\node_cache<br></code></pre></td></tr></table></figure><p><img src="/../imgs/first/%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7_2023-05-05_10-42-36.png" alt="添加属性"></p><p><strong>测试</strong></p><p>全局安装最常用的 express 模块 进行测试<br>命令如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install express -g<br></code></pre></td></tr></table></figure><p>全局配置淘宝镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>全局安装webpack</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install webpack -g<br></code></pre></td></tr></table></figure><h2 id="三、连接github"><a href="#三、连接github" class="headerlink" title="三、连接github"></a>三、连接github</h2><p>使用邮箱注册 <a href="https://link.zhihu.com/?target=https://github.com/">GitHub</a> 账户，选择免费账户（Free），并完成邮件验证。</p><p>右键 -&gt; Git Bash Here，<strong>设置用户名和邮箱</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">git config --global user.name &quot;GitHub 用户名&quot;<br>git config --global user.email &quot;GitHub 邮箱&quot;<br></code></pre></td></tr></table></figure><p><strong>创建 SSH 密匙</strong>：</p><p>输入 <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，然后一路回车。</p><p><strong>添加密匙：</strong></p><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><p><strong>验证连接：</strong></p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><p><img src="/../imgs/first/%E9%AA%8C%E8%AF%81%E8%BF%9E%E6%8E%A5_2023-05-05_11-17-56.png" alt="验证链接"></p><p>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p><h2 id="四、创建github-pages-仓库"><a href="#四、创建github-pages-仓库" class="headerlink" title="四、创建github pages 仓库"></a>四、创建github pages 仓库</h2><p>GitHub 主页右上角加号 -&gt; New repository：</p><ul><li><p>Repository name 中输入 <code>用户名.github.io</code></p></li><li><p>勾选 “Initialize this repository with a README”</p></li><li><p>Description 选填</p><p><img src="/../imgs/first/%E5%88%9B%E5%BB%BA%E6%96%B0%E5%82%A8%E5%AD%98%E5%BA%93_2023-05-05_11-24-55.png" alt="创建github pages"></p></li></ul><p>填好后点击 Create repository 创建。</p><p>创建后默认自动启用 HTTPS，博客地址为：<code>https://用户名.github.io</code></p><h2 id="五、安装hexo"><a href="#五、安装hexo" class="headerlink" title="五、安装hexo"></a>五、安装hexo</h2><p>新建一个文件夹用来存放 Hexo 的程序文件，如 blog。打开该文件夹，右键 -&gt; Git Bash Here。</p><h3 id="5-1使用-npm-一键安装-Hexo-博客程序："><a href="#5-1使用-npm-一键安装-Hexo-博客程序：" class="headerlink" title="5.1使用 npm 一键安装 Hexo 博客程序："></a>5.1使用 npm 一键安装 Hexo 博客程序：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h3 id="5-2Hexo-初始化和本地预览"><a href="#5-2Hexo-初始化和本地预览" class="headerlink" title="5.2Hexo 初始化和本地预览"></a><strong>5.2Hexo 初始化和本地预览</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">hexo init      # 初始化<br>npm install    # 安装组件<br></code></pre></td></tr></table></figure><p>完成后依次输入下面命令，<strong>启动本地服务器进行预览</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">hexo g   # 生成页面<br>hexo s   # 启动预览<br></code></pre></td></tr></table></figure><p><strong>访问</strong> <code>http://localhost:4000</code><strong>，出现 Hexo 默认页面，本地博客安装成功！</strong></p><h2 id="六、部署hexo到github-pages"><a href="#六、部署hexo到github-pages" class="headerlink" title="六、部署hexo到github pages"></a>六、部署hexo到github pages</h2><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><p>首先<strong>安装 hexo-deployer-git</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">deploy:<br>  type: git<br>  repository: git@github.com:用户名/用户名.github.io.git<br>  branch: main<br>  <br>  例子<br>  deploy:<br>  type: &#x27;git&#x27;<br>  repository: https://github.com/herobqm/herobqm.github.io<br>  branch: main<br><br></code></pre></td></tr></table></figure><p>repository在这里看</p><p><img src="/../imgs/first/yml%E9%85%8D%E7%BD%AE%E5%9C%B0%E5%9D%80_2023-05-05_13-55-08.png" alt="yml网页地址"></p><p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p><p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
